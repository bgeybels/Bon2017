'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="BON")>  _
Partial Public Class BONDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertBONL(instance As BONL)
    End Sub
  Partial Private Sub UpdateBONL(instance As BONL)
    End Sub
  Partial Private Sub DeleteBONL(instance As BONL)
    End Sub
  Partial Private Sub InsertLogin(instance As Login)
    End Sub
  Partial Private Sub UpdateLogin(instance As Login)
    End Sub
  Partial Private Sub DeleteLogin(instance As Login)
    End Sub
  Partial Private Sub InsertCOD(instance As COD)
    End Sub
  Partial Private Sub UpdateCOD(instance As COD)
    End Sub
  Partial Private Sub DeleteCOD(instance As COD)
    End Sub
  Partial Private Sub InsertCODGP(instance As CODGP)
    End Sub
  Partial Private Sub UpdateCODGP(instance As CODGP)
    End Sub
  Partial Private Sub DeleteCODGP(instance As CODGP)
    End Sub
  Partial Private Sub InsertBTW(instance As BTW)
    End Sub
  Partial Private Sub UpdateBTW(instance As BTW)
    End Sub
  Partial Private Sub DeleteBTW(instance As BTW)
    End Sub
  Partial Private Sub InsertAOms(instance As AOms)
    End Sub
  Partial Private Sub UpdateAOms(instance As AOms)
    End Sub
  Partial Private Sub DeleteAOms(instance As AOms)
    End Sub
  Partial Private Sub InsertEIGENAAR(instance As EIGENAAR)
    End Sub
  Partial Private Sub UpdateEIGENAAR(instance As EIGENAAR)
    End Sub
  Partial Private Sub DeleteEIGENAAR(instance As EIGENAAR)
    End Sub
  Partial Private Sub InsertPER(instance As PER)
    End Sub
  Partial Private Sub UpdatePER(instance As PER)
    End Sub
  Partial Private Sub DeletePER(instance As PER)
    End Sub
  Partial Private Sub InsertOAANM(instance As OAANM)
    End Sub
  Partial Private Sub UpdateOAANM(instance As OAANM)
    End Sub
  Partial Private Sub DeleteOAANM(instance As OAANM)
    End Sub
  Partial Private Sub InsertDIES(instance As DIES)
    End Sub
  Partial Private Sub UpdateDIES(instance As DIES)
    End Sub
  Partial Private Sub DeleteDIES(instance As DIES)
    End Sub
  Partial Private Sub InsertBON(instance As BON)
    End Sub
  Partial Private Sub UpdateBON(instance As BON)
    End Sub
  Partial Private Sub DeleteBON(instance As BON)
    End Sub
  Partial Private Sub InsertKLANT(instance As KLANT)
    End Sub
  Partial Private Sub UpdateKLANT(instance As KLANT)
    End Sub
  Partial Private Sub DeleteKLANT(instance As KLANT)
    End Sub
  Partial Private Sub InsertSTOCK(instance As STOCK)
    End Sub
  Partial Private Sub UpdateSTOCK(instance As STOCK)
    End Sub
  Partial Private Sub DeleteSTOCK(instance As STOCK)
    End Sub
  Partial Private Sub InsertLEV(instance As LEV)
    End Sub
  Partial Private Sub UpdateLEV(instance As LEV)
    End Sub
  Partial Private Sub DeleteLEV(instance As LEV)
    End Sub
  Partial Private Sub InsertFAKT(instance As FAKT)
    End Sub
  Partial Private Sub UpdateFAKT(instance As FAKT)
    End Sub
  Partial Private Sub DeleteFAKT(instance As FAKT)
    End Sub
  Partial Private Sub InsertFAKTL(instance As FAKTL)
    End Sub
  Partial Private Sub UpdateFAKTL(instance As FAKTL)
    End Sub
  Partial Private Sub DeleteFAKTL(instance As FAKTL)
    End Sub
  Partial Private Sub InsertDEL(instance As DEL)
    End Sub
  Partial Private Sub UpdateDEL(instance As DEL)
    End Sub
  Partial Private Sub DeleteDEL(instance As DEL)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Bon2017.My.MySettings.Default.BONConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property BONLs() As System.Data.Linq.Table(Of BONL)
		Get
			Return Me.GetTable(Of BONL)
		End Get
	End Property
	
	Public ReadOnly Property Logins() As System.Data.Linq.Table(Of Login)
		Get
			Return Me.GetTable(Of Login)
		End Get
	End Property
	
	Public ReadOnly Property CODs() As System.Data.Linq.Table(Of COD)
		Get
			Return Me.GetTable(Of COD)
		End Get
	End Property
	
	Public ReadOnly Property CODGPs() As System.Data.Linq.Table(Of CODGP)
		Get
			Return Me.GetTable(Of CODGP)
		End Get
	End Property
	
	Public ReadOnly Property BTWs() As System.Data.Linq.Table(Of BTW)
		Get
			Return Me.GetTable(Of BTW)
		End Get
	End Property
	
	Public ReadOnly Property AOms() As System.Data.Linq.Table(Of AOms)
		Get
			Return Me.GetTable(Of AOms)
		End Get
	End Property
	
	Public ReadOnly Property EIGENAARs() As System.Data.Linq.Table(Of EIGENAAR)
		Get
			Return Me.GetTable(Of EIGENAAR)
		End Get
	End Property
	
	Public ReadOnly Property PERs() As System.Data.Linq.Table(Of PER)
		Get
			Return Me.GetTable(Of PER)
		End Get
	End Property
	
	Public ReadOnly Property OAANMs() As System.Data.Linq.Table(Of OAANM)
		Get
			Return Me.GetTable(Of OAANM)
		End Get
	End Property
	
	Public ReadOnly Property DIES() As System.Data.Linq.Table(Of DIES)
		Get
			Return Me.GetTable(Of DIES)
		End Get
	End Property
	
	Public ReadOnly Property BONs() As System.Data.Linq.Table(Of BON)
		Get
			Return Me.GetTable(Of BON)
		End Get
	End Property
	
	Public ReadOnly Property KLANTs() As System.Data.Linq.Table(Of KLANT)
		Get
			Return Me.GetTable(Of KLANT)
		End Get
	End Property
	
	Public ReadOnly Property STOCKs() As System.Data.Linq.Table(Of STOCK)
		Get
			Return Me.GetTable(Of STOCK)
		End Get
	End Property
	
	Public ReadOnly Property LEVs() As System.Data.Linq.Table(Of LEV)
		Get
			Return Me.GetTable(Of LEV)
		End Get
	End Property
	
	Public ReadOnly Property FAKTs() As System.Data.Linq.Table(Of FAKT)
		Get
			Return Me.GetTable(Of FAKT)
		End Get
	End Property
	
	Public ReadOnly Property FAKTLs() As System.Data.Linq.Table(Of FAKTL)
		Get
			Return Me.GetTable(Of FAKTL)
		End Get
	End Property
	
	Public ReadOnly Property DELs() As System.Data.Linq.Table(Of DEL)
		Get
			Return Me.GetTable(Of DEL)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BONL")>  _
Partial Public Class BONL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BONJR As Integer
	
	Private _BONNR As Integer
	
	Private _BONLVNR As Integer
	
	Private _Volgorde As Short
	
	Private _Datum As Date
	
	Private _BWStraat As String
	
	Private _BWAdres As String
	
	Private _Aantal As Single
	
	Private _BONEenhp As Double
	
	Private _BNRQ As Integer
	
	Private _ANRQ As Integer
	
	Private _CNRQ As Integer
	
	Private _usernrq As String
	
	Private _chdate As Date
	
	Private _BONEenhpbu As Double
	
	Private _diesel As Double
	
	Private _select As Boolean
	
	Private _omstijd As String
	
	Private _EXTNR As String
	
	Private _DNRQ As Integer
	
	Private _memo As String
	
	Private _PERNM As String
	
	Private _OAANMNM As String
	
	Private _levering As Boolean
	
	Private _usercre As String
	
	Private _datecre As Date
	
	Private _CODs As EntitySet(Of COD)
	
	Private _BTWs As EntitySet(Of BTW)
	
	Private _AOms As EntitySet(Of AOms)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBONJRChanging(value As Integer)
    End Sub
    Partial Private Sub OnBONJRChanged()
    End Sub
    Partial Private Sub OnBONNRChanging(value As Integer)
    End Sub
    Partial Private Sub OnBONNRChanged()
    End Sub
    Partial Private Sub OnBONLVNRChanging(value As Integer)
    End Sub
    Partial Private Sub OnBONLVNRChanged()
    End Sub
    Partial Private Sub OnVolgordeChanging(value As Short)
    End Sub
    Partial Private Sub OnVolgordeChanged()
    End Sub
    Partial Private Sub OnDatumChanging(value As Date)
    End Sub
    Partial Private Sub OnDatumChanged()
    End Sub
    Partial Private Sub OnBWStraatChanging(value As String)
    End Sub
    Partial Private Sub OnBWStraatChanged()
    End Sub
    Partial Private Sub OnBWAdresChanging(value As String)
    End Sub
    Partial Private Sub OnBWAdresChanged()
    End Sub
    Partial Private Sub OnAantalChanging(value As Single)
    End Sub
    Partial Private Sub OnAantalChanged()
    End Sub
    Partial Private Sub OnBONEenhpChanging(value As Double)
    End Sub
    Partial Private Sub OnBONEenhpChanged()
    End Sub
    Partial Private Sub OnBNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnBNRQChanged()
    End Sub
    Partial Private Sub OnANRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnANRQChanged()
    End Sub
    Partial Private Sub OnCNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnCNRQChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    Partial Private Sub OnBONEenhpbuChanging(value As Double)
    End Sub
    Partial Private Sub OnBONEenhpbuChanged()
    End Sub
    Partial Private Sub OndieselChanging(value As Double)
    End Sub
    Partial Private Sub OndieselChanged()
    End Sub
    Partial Private Sub OnselectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnselectChanged()
    End Sub
    Partial Private Sub OnomstijdChanging(value As String)
    End Sub
    Partial Private Sub OnomstijdChanged()
    End Sub
    Partial Private Sub OnEXTNRChanging(value As String)
    End Sub
    Partial Private Sub OnEXTNRChanged()
    End Sub
    Partial Private Sub OnDNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnDNRQChanged()
    End Sub
    Partial Private Sub OnmemoChanging(value As String)
    End Sub
    Partial Private Sub OnmemoChanged()
    End Sub
    Partial Private Sub OnPERNMChanging(value As String)
    End Sub
    Partial Private Sub OnPERNMChanged()
    End Sub
    Partial Private Sub OnOAANMNMChanging(value As String)
    End Sub
    Partial Private Sub OnOAANMNMChanged()
    End Sub
    Partial Private Sub OnleveringChanging(value As Boolean)
    End Sub
    Partial Private Sub OnleveringChanged()
    End Sub
    Partial Private Sub OnusercreChanging(value As String)
    End Sub
    Partial Private Sub OnusercreChanged()
    End Sub
    Partial Private Sub OndatecreChanging(value As Date)
    End Sub
    Partial Private Sub OndatecreChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._CODs = New EntitySet(Of COD)(AddressOf Me.attach_CODs, AddressOf Me.detach_CODs)
		Me._BTWs = New EntitySet(Of BTW)(AddressOf Me.attach_BTWs, AddressOf Me.detach_BTWs)
		Me._AOms = New EntitySet(Of AOms)(AddressOf Me.attach_AOms, AddressOf Me.detach_AOms)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BONJR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property BONJR() As Integer
		Get
			Return Me._BONJR
		End Get
		Set
			If ((Me._BONJR = value)  _
						= false) Then
				Me.OnBONJRChanging(value)
				Me.SendPropertyChanging
				Me._BONJR = value
				Me.SendPropertyChanged("BONJR")
				Me.OnBONJRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BONNR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property BONNR() As Integer
		Get
			Return Me._BONNR
		End Get
		Set
			If ((Me._BONNR = value)  _
						= false) Then
				Me.OnBONNRChanging(value)
				Me.SendPropertyChanging
				Me._BONNR = value
				Me.SendPropertyChanged("BONNR")
				Me.OnBONNRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BONLVNR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property BONLVNR() As Integer
		Get
			Return Me._BONLVNR
		End Get
		Set
			If ((Me._BONLVNR = value)  _
						= false) Then
				Me.OnBONLVNRChanging(value)
				Me.SendPropertyChanging
				Me._BONLVNR = value
				Me.SendPropertyChanged("BONLVNR")
				Me.OnBONLVNRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Volgorde", DbType:="SmallInt NOT NULL")>  _
	Public Property Volgorde() As Short
		Get
			Return Me._Volgorde
		End Get
		Set
			If ((Me._Volgorde = value)  _
						= false) Then
				Me.OnVolgordeChanging(value)
				Me.SendPropertyChanging
				Me._Volgorde = value
				Me.SendPropertyChanged("Volgorde")
				Me.OnVolgordeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Datum", DbType:="DateTime NOT NULL")>  _
	Public Property Datum() As Date
		Get
			Return Me._Datum
		End Get
		Set
			If ((Me._Datum = value)  _
						= false) Then
				Me.OnDatumChanging(value)
				Me.SendPropertyChanging
				Me._Datum = value
				Me.SendPropertyChanged("Datum")
				Me.OnDatumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BWStraat", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property BWStraat() As String
		Get
			Return Me._BWStraat
		End Get
		Set
			If (String.Equals(Me._BWStraat, value) = false) Then
				Me.OnBWStraatChanging(value)
				Me.SendPropertyChanging
				Me._BWStraat = value
				Me.SendPropertyChanged("BWStraat")
				Me.OnBWStraatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BWAdres", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property BWAdres() As String
		Get
			Return Me._BWAdres
		End Get
		Set
			If (String.Equals(Me._BWAdres, value) = false) Then
				Me.OnBWAdresChanging(value)
				Me.SendPropertyChanging
				Me._BWAdres = value
				Me.SendPropertyChanged("BWAdres")
				Me.OnBWAdresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aantal", DbType:="Real NOT NULL")>  _
	Public Property Aantal() As Single
		Get
			Return Me._Aantal
		End Get
		Set
			If ((Me._Aantal = value)  _
						= false) Then
				Me.OnAantalChanging(value)
				Me.SendPropertyChanging
				Me._Aantal = value
				Me.SendPropertyChanged("Aantal")
				Me.OnAantalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BONEenhp", DbType:="Float NOT NULL")>  _
	Public Property BONEenhp() As Double
		Get
			Return Me._BONEenhp
		End Get
		Set
			If ((Me._BONEenhp = value)  _
						= false) Then
				Me.OnBONEenhpChanging(value)
				Me.SendPropertyChanging
				Me._BONEenhp = value
				Me.SendPropertyChanged("BONEenhp")
				Me.OnBONEenhpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BNRQ", DbType:="Int NOT NULL")>  _
	Public Property BNRQ() As Integer
		Get
			Return Me._BNRQ
		End Get
		Set
			If ((Me._BNRQ = value)  _
						= false) Then
				Me.OnBNRQChanging(value)
				Me.SendPropertyChanging
				Me._BNRQ = value
				Me.SendPropertyChanged("BNRQ")
				Me.OnBNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANRQ", DbType:="Int NOT NULL")>  _
	Public Property ANRQ() As Integer
		Get
			Return Me._ANRQ
		End Get
		Set
			If ((Me._ANRQ = value)  _
						= false) Then
				Me.OnANRQChanging(value)
				Me.SendPropertyChanging
				Me._ANRQ = value
				Me.SendPropertyChanged("ANRQ")
				Me.OnANRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNRQ", DbType:="Int NOT NULL")>  _
	Public Property CNRQ() As Integer
		Get
			Return Me._CNRQ
		End Get
		Set
			If ((Me._CNRQ = value)  _
						= false) Then
				Me.OnCNRQChanging(value)
				Me.SendPropertyChanging
				Me._CNRQ = value
				Me.SendPropertyChanged("CNRQ")
				Me.OnCNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BONEenhpbu", DbType:="Float NOT NULL")>  _
	Public Property BONEenhpbu() As Double
		Get
			Return Me._BONEenhpbu
		End Get
		Set
			If ((Me._BONEenhpbu = value)  _
						= false) Then
				Me.OnBONEenhpbuChanging(value)
				Me.SendPropertyChanging
				Me._BONEenhpbu = value
				Me.SendPropertyChanged("BONEenhpbu")
				Me.OnBONEenhpbuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diesel", DbType:="Float NOT NULL")>  _
	Public Property diesel() As Double
		Get
			Return Me._diesel
		End Get
		Set
			If ((Me._diesel = value)  _
						= false) Then
				Me.OndieselChanging(value)
				Me.SendPropertyChanging
				Me._diesel = value
				Me.SendPropertyChanged("diesel")
				Me.OndieselChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_select", DbType:="Bit NOT NULL")>  _
	Public Property [select]() As Boolean
		Get
			Return Me._select
		End Get
		Set
			If ((Me._select = value)  _
						= false) Then
				Me.OnselectChanging(value)
				Me.SendPropertyChanging
				Me._select = value
				Me.SendPropertyChanged("[select]")
				Me.OnselectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_omstijd", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property omstijd() As String
		Get
			Return Me._omstijd
		End Get
		Set
			If (String.Equals(Me._omstijd, value) = false) Then
				Me.OnomstijdChanging(value)
				Me.SendPropertyChanging
				Me._omstijd = value
				Me.SendPropertyChanged("omstijd")
				Me.OnomstijdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXTNR", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property EXTNR() As String
		Get
			Return Me._EXTNR
		End Get
		Set
			If (String.Equals(Me._EXTNR, value) = false) Then
				Me.OnEXTNRChanging(value)
				Me.SendPropertyChanging
				Me._EXTNR = value
				Me.SendPropertyChanged("EXTNR")
				Me.OnEXTNRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNRQ", DbType:="Int NOT NULL")>  _
	Public Property DNRQ() As Integer
		Get
			Return Me._DNRQ
		End Get
		Set
			If ((Me._DNRQ = value)  _
						= false) Then
				Me.OnDNRQChanging(value)
				Me.SendPropertyChanging
				Me._DNRQ = value
				Me.SendPropertyChanged("DNRQ")
				Me.OnDNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_memo", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property memo() As String
		Get
			Return Me._memo
		End Get
		Set
			If (String.Equals(Me._memo, value) = false) Then
				Me.OnmemoChanging(value)
				Me.SendPropertyChanging
				Me._memo = value
				Me.SendPropertyChanged("memo")
				Me.OnmemoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERNM", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property PERNM() As String
		Get
			Return Me._PERNM
		End Get
		Set
			If (String.Equals(Me._PERNM, value) = false) Then
				Me.OnPERNMChanging(value)
				Me.SendPropertyChanging
				Me._PERNM = value
				Me.SendPropertyChanged("PERNM")
				Me.OnPERNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OAANMNM", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property OAANMNM() As String
		Get
			Return Me._OAANMNM
		End Get
		Set
			If (String.Equals(Me._OAANMNM, value) = false) Then
				Me.OnOAANMNMChanging(value)
				Me.SendPropertyChanging
				Me._OAANMNM = value
				Me.SendPropertyChanged("OAANMNM")
				Me.OnOAANMNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_levering", DbType:="Bit NOT NULL")>  _
	Public Property levering() As Boolean
		Get
			Return Me._levering
		End Get
		Set
			If ((Me._levering = value)  _
						= false) Then
				Me.OnleveringChanging(value)
				Me.SendPropertyChanging
				Me._levering = value
				Me.SendPropertyChanged("levering")
				Me.OnleveringChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usercre", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usercre() As String
		Get
			Return Me._usercre
		End Get
		Set
			If (String.Equals(Me._usercre, value) = false) Then
				Me.OnusercreChanging(value)
				Me.SendPropertyChanging
				Me._usercre = value
				Me.SendPropertyChanged("usercre")
				Me.OnusercreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datecre", DbType:="DateTime NOT NULL")>  _
	Public Property datecre() As Date
		Get
			Return Me._datecre
		End Get
		Set
			If ((Me._datecre = value)  _
						= false) Then
				Me.OndatecreChanging(value)
				Me.SendPropertyChanging
				Me._datecre = value
				Me.SendPropertyChanged("datecre")
				Me.OndatecreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BONL_COD", Storage:="_CODs", ThisKey:="CNRQ", OtherKey:="CNRQ")>  _
	Public Property CODs() As EntitySet(Of COD)
		Get
			Return Me._CODs
		End Get
		Set
			Me._CODs.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BONL_BTW", Storage:="_BTWs", ThisKey:="BNRQ", OtherKey:="BTW")>  _
	Public Property BTWs() As EntitySet(Of BTW)
		Get
			Return Me._BTWs
		End Get
		Set
			Me._BTWs.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BONL_AOms", Storage:="_AOms", ThisKey:="ANRQ", OtherKey:="ANRQ")>  _
	Public Property AOms() As EntitySet(Of AOms)
		Get
			Return Me._AOms
		End Get
		Set
			Me._AOms.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_CODs(ByVal entity As COD)
		Me.SendPropertyChanging
		entity.BONL = Me
	End Sub
	
	Private Sub detach_CODs(ByVal entity As COD)
		Me.SendPropertyChanging
		entity.BONL = Nothing
	End Sub
	
	Private Sub attach_BTWs(ByVal entity As BTW)
		Me.SendPropertyChanging
		entity.BONL = Me
	End Sub
	
	Private Sub detach_BTWs(ByVal entity As BTW)
		Me.SendPropertyChanging
		entity.BONL = Nothing
	End Sub
	
	Private Sub attach_AOms(ByVal entity As AOms)
		Me.SendPropertyChanging
		entity.BONL = Me
	End Sub
	
	Private Sub detach_AOms(ByVal entity As AOms)
		Me.SendPropertyChanging
		entity.BONL = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Login")>  _
Partial Public Class Login
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _nrq As Integer
	
	Private _naam As String
	
	Private _pwd As String
	
	Private _UserNrq As System.Nullable(Of Integer)
	
	Private _CurrentLogon As String
	
	Private _upd As Boolean
	
	Private _del As Boolean
	
	Private _new As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnnrqChanging(value As Integer)
    End Sub
    Partial Private Sub OnnrqChanged()
    End Sub
    Partial Private Sub OnnaamChanging(value As String)
    End Sub
    Partial Private Sub OnnaamChanged()
    End Sub
    Partial Private Sub OnpwdChanging(value As String)
    End Sub
    Partial Private Sub OnpwdChanged()
    End Sub
    Partial Private Sub OnUserNrqChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserNrqChanged()
    End Sub
    Partial Private Sub OnCurrentLogonChanging(value As String)
    End Sub
    Partial Private Sub OnCurrentLogonChanged()
    End Sub
    Partial Private Sub OnupdChanging(value As Boolean)
    End Sub
    Partial Private Sub OnupdChanged()
    End Sub
    Partial Private Sub OndelChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelChanged()
    End Sub
    Partial Private Sub OnnewChanging(value As Boolean)
    End Sub
    Partial Private Sub OnnewChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nrq", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property nrq() As Integer
		Get
			Return Me._nrq
		End Get
		Set
			If ((Me._nrq = value)  _
						= false) Then
				Me.OnnrqChanging(value)
				Me.SendPropertyChanging
				Me._nrq = value
				Me.SendPropertyChanged("nrq")
				Me.OnnrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_naam", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property naam() As String
		Get
			Return Me._naam
		End Get
		Set
			If (String.Equals(Me._naam, value) = false) Then
				Me.OnnaamChanging(value)
				Me.SendPropertyChanging
				Me._naam = value
				Me.SendPropertyChanged("naam")
				Me.OnnaamChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pwd", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property pwd() As String
		Get
			Return Me._pwd
		End Get
		Set
			If (String.Equals(Me._pwd, value) = false) Then
				Me.OnpwdChanging(value)
				Me.SendPropertyChanging
				Me._pwd = value
				Me.SendPropertyChanged("pwd")
				Me.OnpwdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserNrq", DbType:="Int")>  _
	Public Property UserNrq() As System.Nullable(Of Integer)
		Get
			Return Me._UserNrq
		End Get
		Set
			If (Me._UserNrq.Equals(value) = false) Then
				Me.OnUserNrqChanging(value)
				Me.SendPropertyChanging
				Me._UserNrq = value
				Me.SendPropertyChanged("UserNrq")
				Me.OnUserNrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentLogon", DbType:="NVarChar(1)")>  _
	Public Property CurrentLogon() As String
		Get
			Return Me._CurrentLogon
		End Get
		Set
			If (String.Equals(Me._CurrentLogon, value) = false) Then
				Me.OnCurrentLogonChanging(value)
				Me.SendPropertyChanging
				Me._CurrentLogon = value
				Me.SendPropertyChanged("CurrentLogon")
				Me.OnCurrentLogonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_upd", DbType:="Bit NOT NULL")>  _
	Public Property upd() As Boolean
		Get
			Return Me._upd
		End Get
		Set
			If ((Me._upd = value)  _
						= false) Then
				Me.OnupdChanging(value)
				Me.SendPropertyChanging
				Me._upd = value
				Me.SendPropertyChanged("upd")
				Me.OnupdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_del", DbType:="Bit NOT NULL")>  _
	Public Property del() As Boolean
		Get
			Return Me._del
		End Get
		Set
			If ((Me._del = value)  _
						= false) Then
				Me.OndelChanging(value)
				Me.SendPropertyChanging
				Me._del = value
				Me.SendPropertyChanged("del")
				Me.OndelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="new", Storage:="_new", DbType:="Bit NOT NULL")>  _
	Public Property [new]() As Boolean
		Get
			Return Me._new
		End Get
		Set
			If ((Me._new = value)  _
						= false) Then
				Me.OnnewChanging(value)
				Me.SendPropertyChanging
				Me._new = value
				Me.SendPropertyChanged("[new]")
				Me.OnnewChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.COD")>  _
Partial Public Class COD
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CNRQ As Integer
	
	Private _CGNRQ As Integer
	
	Private _Code As String
	
	Private _OmsCode As String
	
	Private _OmsLong As String
	
	Private _Eenhp As Double
	
	Private _EenhpO As Double
	
	Private _Aankp As Double
	
	Private _ANRQ As Integer
	
	Private _usernrq As String
	
	Private _milieu As Boolean
	
	Private _ChDate As Date
	
	Private _Perc As Integer
	
	Private _USDate As Date
	
	Private _sort As Integer
	
	Private _Besteld As Boolean
	
	Private _Minstock As Double
	
	Private _Maxstock As Double
	
	Private _Stock As Double
	
	Private _OStock As Double
	
	Private _Plmagazijn As String
	
	Private _notstock As Boolean
	
	Private _lupdate As String
	
	Private _PERNM As String
	
	Private _select As Boolean
	
	Private _LEV As String
	
	Private _gratis As Boolean
	
	Private _OAANMNM As String
	
	Private _CODGPs As EntitySet(Of CODGP)
	
	Private _AOms As EntitySet(Of AOms)
	
	Private _BONL As EntityRef(Of BONL)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnCNRQChanged()
    End Sub
    Partial Private Sub OnCGNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnCGNRQChanged()
    End Sub
    Partial Private Sub OnCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCodeChanged()
    End Sub
    Partial Private Sub OnOmsCodeChanging(value As String)
    End Sub
    Partial Private Sub OnOmsCodeChanged()
    End Sub
    Partial Private Sub OnOmsLongChanging(value As String)
    End Sub
    Partial Private Sub OnOmsLongChanged()
    End Sub
    Partial Private Sub OnEenhpChanging(value As Double)
    End Sub
    Partial Private Sub OnEenhpChanged()
    End Sub
    Partial Private Sub OnEenhpOChanging(value As Double)
    End Sub
    Partial Private Sub OnEenhpOChanged()
    End Sub
    Partial Private Sub OnAankpChanging(value As Double)
    End Sub
    Partial Private Sub OnAankpChanged()
    End Sub
    Partial Private Sub OnANRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnANRQChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnmilieuChanging(value As Boolean)
    End Sub
    Partial Private Sub OnmilieuChanged()
    End Sub
    Partial Private Sub OnChDateChanging(value As Date)
    End Sub
    Partial Private Sub OnChDateChanged()
    End Sub
    Partial Private Sub OnPercChanging(value As Integer)
    End Sub
    Partial Private Sub OnPercChanged()
    End Sub
    Partial Private Sub OnUSDateChanging(value As Date)
    End Sub
    Partial Private Sub OnUSDateChanged()
    End Sub
    Partial Private Sub OnsortChanging(value As Integer)
    End Sub
    Partial Private Sub OnsortChanged()
    End Sub
    Partial Private Sub OnBesteldChanging(value As Boolean)
    End Sub
    Partial Private Sub OnBesteldChanged()
    End Sub
    Partial Private Sub OnMinstockChanging(value As Double)
    End Sub
    Partial Private Sub OnMinstockChanged()
    End Sub
    Partial Private Sub OnMaxstockChanging(value As Double)
    End Sub
    Partial Private Sub OnMaxstockChanged()
    End Sub
    Partial Private Sub OnStockChanging(value As Double)
    End Sub
    Partial Private Sub OnStockChanged()
    End Sub
    Partial Private Sub OnOStockChanging(value As Double)
    End Sub
    Partial Private Sub OnOStockChanged()
    End Sub
    Partial Private Sub OnPlmagazijnChanging(value As String)
    End Sub
    Partial Private Sub OnPlmagazijnChanged()
    End Sub
    Partial Private Sub OnnotstockChanging(value As Boolean)
    End Sub
    Partial Private Sub OnnotstockChanged()
    End Sub
    Partial Private Sub OnlupdateChanging(value As String)
    End Sub
    Partial Private Sub OnlupdateChanged()
    End Sub
    Partial Private Sub OnPERNMChanging(value As String)
    End Sub
    Partial Private Sub OnPERNMChanged()
    End Sub
    Partial Private Sub OnselectChanging(value As Boolean)
    End Sub
    Partial Private Sub OnselectChanged()
    End Sub
    Partial Private Sub OnLEVChanging(value As String)
    End Sub
    Partial Private Sub OnLEVChanged()
    End Sub
    Partial Private Sub OngratisChanging(value As Boolean)
    End Sub
    Partial Private Sub OngratisChanged()
    End Sub
    Partial Private Sub OnOAANMNMChanging(value As String)
    End Sub
    Partial Private Sub OnOAANMNMChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._CODGPs = New EntitySet(Of CODGP)(AddressOf Me.attach_CODGPs, AddressOf Me.detach_CODGPs)
		Me._AOms = New EntitySet(Of AOms)(AddressOf Me.attach_AOms, AddressOf Me.detach_AOms)
		Me._BONL = CType(Nothing, EntityRef(Of BONL))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNRQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CNRQ() As Integer
		Get
			Return Me._CNRQ
		End Get
		Set
			If ((Me._CNRQ = value)  _
						= false) Then
				If Me._BONL.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCNRQChanging(value)
				Me.SendPropertyChanging
				Me._CNRQ = value
				Me.SendPropertyChanged("CNRQ")
				Me.OnCNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CGNRQ", DbType:="Int NOT NULL")>  _
	Public Property CGNRQ() As Integer
		Get
			Return Me._CGNRQ
		End Get
		Set
			If ((Me._CGNRQ = value)  _
						= false) Then
				Me.OnCGNRQChanging(value)
				Me.SendPropertyChanging
				Me._CGNRQ = value
				Me.SendPropertyChanged("CGNRQ")
				Me.OnCGNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Code", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Code() As String
		Get
			Return Me._Code
		End Get
		Set
			If (String.Equals(Me._Code, value) = false) Then
				Me.OnCodeChanging(value)
				Me.SendPropertyChanging
				Me._Code = value
				Me.SendPropertyChanged("Code")
				Me.OnCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OmsCode", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OmsCode() As String
		Get
			Return Me._OmsCode
		End Get
		Set
			If (String.Equals(Me._OmsCode, value) = false) Then
				Me.OnOmsCodeChanging(value)
				Me.SendPropertyChanging
				Me._OmsCode = value
				Me.SendPropertyChanged("OmsCode")
				Me.OnOmsCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OmsLong", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property OmsLong() As String
		Get
			Return Me._OmsLong
		End Get
		Set
			If (String.Equals(Me._OmsLong, value) = false) Then
				Me.OnOmsLongChanging(value)
				Me.SendPropertyChanging
				Me._OmsLong = value
				Me.SendPropertyChanged("OmsLong")
				Me.OnOmsLongChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Eenhp", DbType:="Float NOT NULL")>  _
	Public Property Eenhp() As Double
		Get
			Return Me._Eenhp
		End Get
		Set
			If ((Me._Eenhp = value)  _
						= false) Then
				Me.OnEenhpChanging(value)
				Me.SendPropertyChanging
				Me._Eenhp = value
				Me.SendPropertyChanged("Eenhp")
				Me.OnEenhpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EenhpO", DbType:="Float NOT NULL")>  _
	Public Property EenhpO() As Double
		Get
			Return Me._EenhpO
		End Get
		Set
			If ((Me._EenhpO = value)  _
						= false) Then
				Me.OnEenhpOChanging(value)
				Me.SendPropertyChanging
				Me._EenhpO = value
				Me.SendPropertyChanged("EenhpO")
				Me.OnEenhpOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aankp", DbType:="Float NOT NULL")>  _
	Public Property Aankp() As Double
		Get
			Return Me._Aankp
		End Get
		Set
			If ((Me._Aankp = value)  _
						= false) Then
				Me.OnAankpChanging(value)
				Me.SendPropertyChanging
				Me._Aankp = value
				Me.SendPropertyChanged("Aankp")
				Me.OnAankpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANRQ", DbType:="Int NOT NULL")>  _
	Public Property ANRQ() As Integer
		Get
			Return Me._ANRQ
		End Get
		Set
			If ((Me._ANRQ = value)  _
						= false) Then
				Me.OnANRQChanging(value)
				Me.SendPropertyChanging
				Me._ANRQ = value
				Me.SendPropertyChanged("ANRQ")
				Me.OnANRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_milieu", DbType:="Bit NOT NULL")>  _
	Public Property milieu() As Boolean
		Get
			Return Me._milieu
		End Get
		Set
			If ((Me._milieu = value)  _
						= false) Then
				Me.OnmilieuChanging(value)
				Me.SendPropertyChanging
				Me._milieu = value
				Me.SendPropertyChanged("milieu")
				Me.OnmilieuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChDate", DbType:="DateTime NOT NULL")>  _
	Public Property ChDate() As Date
		Get
			Return Me._ChDate
		End Get
		Set
			If ((Me._ChDate = value)  _
						= false) Then
				Me.OnChDateChanging(value)
				Me.SendPropertyChanging
				Me._ChDate = value
				Me.SendPropertyChanged("ChDate")
				Me.OnChDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Perc", DbType:="Int NOT NULL")>  _
	Public Property Perc() As Integer
		Get
			Return Me._Perc
		End Get
		Set
			If ((Me._Perc = value)  _
						= false) Then
				Me.OnPercChanging(value)
				Me.SendPropertyChanging
				Me._Perc = value
				Me.SendPropertyChanged("Perc")
				Me.OnPercChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USDate", DbType:="DateTime NOT NULL")>  _
	Public Property USDate() As Date
		Get
			Return Me._USDate
		End Get
		Set
			If ((Me._USDate = value)  _
						= false) Then
				Me.OnUSDateChanging(value)
				Me.SendPropertyChanging
				Me._USDate = value
				Me.SendPropertyChanged("USDate")
				Me.OnUSDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sort", DbType:="Int NOT NULL")>  _
	Public Property sort() As Integer
		Get
			Return Me._sort
		End Get
		Set
			If ((Me._sort = value)  _
						= false) Then
				Me.OnsortChanging(value)
				Me.SendPropertyChanging
				Me._sort = value
				Me.SendPropertyChanged("sort")
				Me.OnsortChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Besteld", DbType:="Bit NOT NULL")>  _
	Public Property Besteld() As Boolean
		Get
			Return Me._Besteld
		End Get
		Set
			If ((Me._Besteld = value)  _
						= false) Then
				Me.OnBesteldChanging(value)
				Me.SendPropertyChanging
				Me._Besteld = value
				Me.SendPropertyChanged("Besteld")
				Me.OnBesteldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Minstock", DbType:="Float NOT NULL")>  _
	Public Property Minstock() As Double
		Get
			Return Me._Minstock
		End Get
		Set
			If ((Me._Minstock = value)  _
						= false) Then
				Me.OnMinstockChanging(value)
				Me.SendPropertyChanging
				Me._Minstock = value
				Me.SendPropertyChanged("Minstock")
				Me.OnMinstockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Maxstock", DbType:="Float NOT NULL")>  _
	Public Property Maxstock() As Double
		Get
			Return Me._Maxstock
		End Get
		Set
			If ((Me._Maxstock = value)  _
						= false) Then
				Me.OnMaxstockChanging(value)
				Me.SendPropertyChanging
				Me._Maxstock = value
				Me.SendPropertyChanged("Maxstock")
				Me.OnMaxstockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Stock", DbType:="Float NOT NULL")>  _
	Public Property Stock() As Double
		Get
			Return Me._Stock
		End Get
		Set
			If ((Me._Stock = value)  _
						= false) Then
				Me.OnStockChanging(value)
				Me.SendPropertyChanging
				Me._Stock = value
				Me.SendPropertyChanged("Stock")
				Me.OnStockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OStock", DbType:="Float NOT NULL")>  _
	Public Property OStock() As Double
		Get
			Return Me._OStock
		End Get
		Set
			If ((Me._OStock = value)  _
						= false) Then
				Me.OnOStockChanging(value)
				Me.SendPropertyChanging
				Me._OStock = value
				Me.SendPropertyChanged("OStock")
				Me.OnOStockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Plmagazijn", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Plmagazijn() As String
		Get
			Return Me._Plmagazijn
		End Get
		Set
			If (String.Equals(Me._Plmagazijn, value) = false) Then
				Me.OnPlmagazijnChanging(value)
				Me.SendPropertyChanging
				Me._Plmagazijn = value
				Me.SendPropertyChanged("Plmagazijn")
				Me.OnPlmagazijnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_notstock", DbType:="Bit NOT NULL")>  _
	Public Property notstock() As Boolean
		Get
			Return Me._notstock
		End Get
		Set
			If ((Me._notstock = value)  _
						= false) Then
				Me.OnnotstockChanging(value)
				Me.SendPropertyChanging
				Me._notstock = value
				Me.SendPropertyChanged("notstock")
				Me.OnnotstockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lupdate", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property lupdate() As String
		Get
			Return Me._lupdate
		End Get
		Set
			If (String.Equals(Me._lupdate, value) = false) Then
				Me.OnlupdateChanging(value)
				Me.SendPropertyChanging
				Me._lupdate = value
				Me.SendPropertyChanged("lupdate")
				Me.OnlupdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERNM", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property PERNM() As String
		Get
			Return Me._PERNM
		End Get
		Set
			If (String.Equals(Me._PERNM, value) = false) Then
				Me.OnPERNMChanging(value)
				Me.SendPropertyChanging
				Me._PERNM = value
				Me.SendPropertyChanged("PERNM")
				Me.OnPERNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_select", DbType:="Bit NOT NULL")>  _
	Public Property [select]() As Boolean
		Get
			Return Me._select
		End Get
		Set
			If ((Me._select = value)  _
						= false) Then
				Me.OnselectChanging(value)
				Me.SendPropertyChanging
				Me._select = value
				Me.SendPropertyChanged("[select]")
				Me.OnselectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEV", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LEV() As String
		Get
			Return Me._LEV
		End Get
		Set
			If (String.Equals(Me._LEV, value) = false) Then
				Me.OnLEVChanging(value)
				Me.SendPropertyChanging
				Me._LEV = value
				Me.SendPropertyChanged("LEV")
				Me.OnLEVChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gratis", DbType:="Bit NOT NULL")>  _
	Public Property gratis() As Boolean
		Get
			Return Me._gratis
		End Get
		Set
			If ((Me._gratis = value)  _
						= false) Then
				Me.OngratisChanging(value)
				Me.SendPropertyChanging
				Me._gratis = value
				Me.SendPropertyChanged("gratis")
				Me.OngratisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OAANMNM", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property OAANMNM() As String
		Get
			Return Me._OAANMNM
		End Get
		Set
			If (String.Equals(Me._OAANMNM, value) = false) Then
				Me.OnOAANMNMChanging(value)
				Me.SendPropertyChanging
				Me._OAANMNM = value
				Me.SendPropertyChanged("OAANMNM")
				Me.OnOAANMNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COD_CODGP", Storage:="_CODGPs", ThisKey:="CGNRQ", OtherKey:="CGNRQ")>  _
	Public Property CODGPs() As EntitySet(Of CODGP)
		Get
			Return Me._CODGPs
		End Get
		Set
			Me._CODGPs.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COD_AOms", Storage:="_AOms", ThisKey:="ANRQ", OtherKey:="ANRQ")>  _
	Public Property AOms() As EntitySet(Of AOms)
		Get
			Return Me._AOms
		End Get
		Set
			Me._AOms.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BONL_COD", Storage:="_BONL", ThisKey:="CNRQ", OtherKey:="CNRQ", IsForeignKey:=true)>  _
	Public Property BONL() As BONL
		Get
			Return Me._BONL.Entity
		End Get
		Set
			Dim previousValue As BONL = Me._BONL.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._BONL.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._BONL.Entity = Nothing
					previousValue.CODs.Remove(Me)
				End If
				Me._BONL.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.CODs.Add(Me)
					Me._CNRQ = value.CNRQ
				Else
					Me._CNRQ = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("BONL")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_CODGPs(ByVal entity As CODGP)
		Me.SendPropertyChanging
		entity.COD = Me
	End Sub
	
	Private Sub detach_CODGPs(ByVal entity As CODGP)
		Me.SendPropertyChanging
		entity.COD = Nothing
	End Sub
	
	Private Sub attach_AOms(ByVal entity As AOms)
		Me.SendPropertyChanging
		entity.COD = Me
	End Sub
	
	Private Sub detach_AOms(ByVal entity As AOms)
		Me.SendPropertyChanging
		entity.COD = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CODGP")>  _
Partial Public Class CODGP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CGNRQ As Integer
	
	Private _OmsGroep As String
	
	Private _usernrq As String
	
	Private _chdate As Date
	
	Private _rondaf As Boolean
	
	Private _nostock As Boolean
	
	Private _procent As Integer
	
	Private _noinvent As Boolean
	
	Private _dies As Boolean
	
	Private _COD As EntityRef(Of COD)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCGNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnCGNRQChanged()
    End Sub
    Partial Private Sub OnOmsGroepChanging(value As String)
    End Sub
    Partial Private Sub OnOmsGroepChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    Partial Private Sub OnrondafChanging(value As Boolean)
    End Sub
    Partial Private Sub OnrondafChanged()
    End Sub
    Partial Private Sub OnnostockChanging(value As Boolean)
    End Sub
    Partial Private Sub OnnostockChanged()
    End Sub
    Partial Private Sub OnprocentChanging(value As Integer)
    End Sub
    Partial Private Sub OnprocentChanged()
    End Sub
    Partial Private Sub OnnoinventChanging(value As Boolean)
    End Sub
    Partial Private Sub OnnoinventChanged()
    End Sub
    Partial Private Sub OndiesChanging(value As Boolean)
    End Sub
    Partial Private Sub OndiesChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._COD = CType(Nothing, EntityRef(Of COD))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CGNRQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CGNRQ() As Integer
		Get
			Return Me._CGNRQ
		End Get
		Set
			If ((Me._CGNRQ = value)  _
						= false) Then
				If Me._COD.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCGNRQChanging(value)
				Me.SendPropertyChanging
				Me._CGNRQ = value
				Me.SendPropertyChanged("CGNRQ")
				Me.OnCGNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OmsGroep", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OmsGroep() As String
		Get
			Return Me._OmsGroep
		End Get
		Set
			If (String.Equals(Me._OmsGroep, value) = false) Then
				Me.OnOmsGroepChanging(value)
				Me.SendPropertyChanging
				Me._OmsGroep = value
				Me.SendPropertyChanged("OmsGroep")
				Me.OnOmsGroepChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rondaf", DbType:="Bit NOT NULL")>  _
	Public Property rondaf() As Boolean
		Get
			Return Me._rondaf
		End Get
		Set
			If ((Me._rondaf = value)  _
						= false) Then
				Me.OnrondafChanging(value)
				Me.SendPropertyChanging
				Me._rondaf = value
				Me.SendPropertyChanged("rondaf")
				Me.OnrondafChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nostock", DbType:="Bit NOT NULL")>  _
	Public Property nostock() As Boolean
		Get
			Return Me._nostock
		End Get
		Set
			If ((Me._nostock = value)  _
						= false) Then
				Me.OnnostockChanging(value)
				Me.SendPropertyChanging
				Me._nostock = value
				Me.SendPropertyChanged("nostock")
				Me.OnnostockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_procent", DbType:="Int NOT NULL")>  _
	Public Property procent() As Integer
		Get
			Return Me._procent
		End Get
		Set
			If ((Me._procent = value)  _
						= false) Then
				Me.OnprocentChanging(value)
				Me.SendPropertyChanging
				Me._procent = value
				Me.SendPropertyChanged("procent")
				Me.OnprocentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_noinvent", DbType:="Bit NOT NULL")>  _
	Public Property noinvent() As Boolean
		Get
			Return Me._noinvent
		End Get
		Set
			If ((Me._noinvent = value)  _
						= false) Then
				Me.OnnoinventChanging(value)
				Me.SendPropertyChanging
				Me._noinvent = value
				Me.SendPropertyChanged("noinvent")
				Me.OnnoinventChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dies", DbType:="Bit NOT NULL")>  _
	Public Property dies() As Boolean
		Get
			Return Me._dies
		End Get
		Set
			If ((Me._dies = value)  _
						= false) Then
				Me.OndiesChanging(value)
				Me.SendPropertyChanging
				Me._dies = value
				Me.SendPropertyChanged("dies")
				Me.OndiesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COD_CODGP", Storage:="_COD", ThisKey:="CGNRQ", OtherKey:="CGNRQ", IsForeignKey:=true)>  _
	Public Property COD() As COD
		Get
			Return Me._COD.Entity
		End Get
		Set
			Dim previousValue As COD = Me._COD.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._COD.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._COD.Entity = Nothing
					previousValue.CODGPs.Remove(Me)
				End If
				Me._COD.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.CODGPs.Add(Me)
					Me._CGNRQ = value.CGNRQ
				Else
					Me._CGNRQ = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("COD")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BTW")>  _
Partial Public Class BTW
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BNRQ As Integer
	
	Private _BTW As Integer
	
	Private _OmsBTW As String
	
	Private _nieuwbon As Boolean
	
	Private _usernrq As String
	
	Private _chdate As Date
	
	Private _BONL As EntityRef(Of BONL)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnBNRQChanged()
    End Sub
    Partial Private Sub OnBTWChanging(value As Integer)
    End Sub
    Partial Private Sub OnBTWChanged()
    End Sub
    Partial Private Sub OnOmsBTWChanging(value As String)
    End Sub
    Partial Private Sub OnOmsBTWChanged()
    End Sub
    Partial Private Sub OnnieuwbonChanging(value As Boolean)
    End Sub
    Partial Private Sub OnnieuwbonChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._BONL = CType(Nothing, EntityRef(Of BONL))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BNRQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BNRQ() As Integer
		Get
			Return Me._BNRQ
		End Get
		Set
			If ((Me._BNRQ = value)  _
						= false) Then
				Me.OnBNRQChanging(value)
				Me.SendPropertyChanging
				Me._BNRQ = value
				Me.SendPropertyChanged("BNRQ")
				Me.OnBNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BTW", DbType:="Int NOT NULL")>  _
	Public Property BTW() As Integer
		Get
			Return Me._BTW
		End Get
		Set
			If ((Me._BTW = value)  _
						= false) Then
				If Me._BONL.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnBTWChanging(value)
				Me.SendPropertyChanging
				Me._BTW = value
				Me.SendPropertyChanged("BTW")
				Me.OnBTWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OmsBTW", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OmsBTW() As String
		Get
			Return Me._OmsBTW
		End Get
		Set
			If (String.Equals(Me._OmsBTW, value) = false) Then
				Me.OnOmsBTWChanging(value)
				Me.SendPropertyChanging
				Me._OmsBTW = value
				Me.SendPropertyChanged("OmsBTW")
				Me.OnOmsBTWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_nieuwbon", DbType:="Bit NOT NULL")>  _
	Public Property nieuwbon() As Boolean
		Get
			Return Me._nieuwbon
		End Get
		Set
			If ((Me._nieuwbon = value)  _
						= false) Then
				Me.OnnieuwbonChanging(value)
				Me.SendPropertyChanging
				Me._nieuwbon = value
				Me.SendPropertyChanged("nieuwbon")
				Me.OnnieuwbonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BONL_BTW", Storage:="_BONL", ThisKey:="BTW", OtherKey:="BNRQ", IsForeignKey:=true)>  _
	Public Property BONL() As BONL
		Get
			Return Me._BONL.Entity
		End Get
		Set
			Dim previousValue As BONL = Me._BONL.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._BONL.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._BONL.Entity = Nothing
					previousValue.BTWs.Remove(Me)
				End If
				Me._BONL.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.BTWs.Add(Me)
					Me._BTW = value.BNRQ
				Else
					Me._BTW = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("BONL")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AOms")>  _
Partial Public Class AOms
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ANRQ As Integer
	
	Private _Oms As String
	
	Private _usernrq As String
	
	Private _chdateao As Date
	
	Private _BONL As EntityRef(Of BONL)
	
	Private _COD As EntityRef(Of COD)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnANRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnANRQChanged()
    End Sub
    Partial Private Sub OnOmsChanging(value As String)
    End Sub
    Partial Private Sub OnOmsChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateaoChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._BONL = CType(Nothing, EntityRef(Of BONL))
		Me._COD = CType(Nothing, EntityRef(Of COD))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ANRQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ANRQ() As Integer
		Get
			Return Me._ANRQ
		End Get
		Set
			If ((Me._ANRQ = value)  _
						= false) Then
				If (Me._BONL.HasLoadedOrAssignedValue OrElse Me._COD.HasLoadedOrAssignedValue) Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnANRQChanging(value)
				Me.SendPropertyChanging
				Me._ANRQ = value
				Me.SendPropertyChanged("ANRQ")
				Me.OnANRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Oms", DbType:="NVarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Oms() As String
		Get
			Return Me._Oms
		End Get
		Set
			If (String.Equals(Me._Oms, value) = false) Then
				Me.OnOmsChanging(value)
				Me.SendPropertyChanging
				Me._Oms = value
				Me.SendPropertyChanged("Oms")
				Me.OnOmsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdateao", DbType:="DateTime NOT NULL")>  _
	Public Property chdateao() As Date
		Get
			Return Me._chdateao
		End Get
		Set
			If ((Me._chdateao = value)  _
						= false) Then
				Me.OnchdateaoChanging(value)
				Me.SendPropertyChanging
				Me._chdateao = value
				Me.SendPropertyChanged("chdateao")
				Me.OnchdateaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BONL_AOms", Storage:="_BONL", ThisKey:="ANRQ", OtherKey:="ANRQ", IsForeignKey:=true)>  _
	Public Property BONL() As BONL
		Get
			Return Me._BONL.Entity
		End Get
		Set
			Dim previousValue As BONL = Me._BONL.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._BONL.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._BONL.Entity = Nothing
					previousValue.AOms.Remove(Me)
				End If
				Me._BONL.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AOms.Add(Me)
					Me._ANRQ = value.ANRQ
				Else
					Me._ANRQ = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("BONL")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="COD_AOms", Storage:="_COD", ThisKey:="ANRQ", OtherKey:="ANRQ", IsForeignKey:=true)>  _
	Public Property COD() As COD
		Get
			Return Me._COD.Entity
		End Get
		Set
			Dim previousValue As COD = Me._COD.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._COD.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._COD.Entity = Nothing
					previousValue.AOms.Remove(Me)
				End If
				Me._COD.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AOms.Add(Me)
					Me._ANRQ = value.ANRQ
				Else
					Me._ANRQ = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("COD")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EIGENAAR")>  _
Partial Public Class EIGENAAR
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ENRQ As Integer
	
	Private _EFirma As String
	
	Private _ENaam As String
	
	Private _EEMail As String
	
	Private _EStraat As String
	
	Private _EAdres As String
	
	Private _ETel As String
	
	Private _EGSM As String
	
	Private _EFax As String
	
	Private _EBTWNr As String
	
	Private _EREKNR As String
	
	Private _usernrq As String
	
	Private _chdate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnENRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnENRQChanged()
    End Sub
    Partial Private Sub OnEFirmaChanging(value As String)
    End Sub
    Partial Private Sub OnEFirmaChanged()
    End Sub
    Partial Private Sub OnENaamChanging(value As String)
    End Sub
    Partial Private Sub OnENaamChanged()
    End Sub
    Partial Private Sub OnEEMailChanging(value As String)
    End Sub
    Partial Private Sub OnEEMailChanged()
    End Sub
    Partial Private Sub OnEStraatChanging(value As String)
    End Sub
    Partial Private Sub OnEStraatChanged()
    End Sub
    Partial Private Sub OnEAdresChanging(value As String)
    End Sub
    Partial Private Sub OnEAdresChanged()
    End Sub
    Partial Private Sub OnETelChanging(value As String)
    End Sub
    Partial Private Sub OnETelChanged()
    End Sub
    Partial Private Sub OnEGSMChanging(value As String)
    End Sub
    Partial Private Sub OnEGSMChanged()
    End Sub
    Partial Private Sub OnEFaxChanging(value As String)
    End Sub
    Partial Private Sub OnEFaxChanged()
    End Sub
    Partial Private Sub OnEBTWNrChanging(value As String)
    End Sub
    Partial Private Sub OnEBTWNrChanged()
    End Sub
    Partial Private Sub OnEREKNRChanging(value As String)
    End Sub
    Partial Private Sub OnEREKNRChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENRQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ENRQ() As Integer
		Get
			Return Me._ENRQ
		End Get
		Set
			If ((Me._ENRQ = value)  _
						= false) Then
				Me.OnENRQChanging(value)
				Me.SendPropertyChanging
				Me._ENRQ = value
				Me.SendPropertyChanged("ENRQ")
				Me.OnENRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFirma", DbType:="NVarChar(50)")>  _
	Public Property EFirma() As String
		Get
			Return Me._EFirma
		End Get
		Set
			If (String.Equals(Me._EFirma, value) = false) Then
				Me.OnEFirmaChanging(value)
				Me.SendPropertyChanging
				Me._EFirma = value
				Me.SendPropertyChanged("EFirma")
				Me.OnEFirmaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENaam", DbType:="NVarChar(50)")>  _
	Public Property ENaam() As String
		Get
			Return Me._ENaam
		End Get
		Set
			If (String.Equals(Me._ENaam, value) = false) Then
				Me.OnENaamChanging(value)
				Me.SendPropertyChanging
				Me._ENaam = value
				Me.SendPropertyChanged("ENaam")
				Me.OnENaamChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EEMail", DbType:="NVarChar(50)")>  _
	Public Property EEMail() As String
		Get
			Return Me._EEMail
		End Get
		Set
			If (String.Equals(Me._EEMail, value) = false) Then
				Me.OnEEMailChanging(value)
				Me.SendPropertyChanging
				Me._EEMail = value
				Me.SendPropertyChanged("EEMail")
				Me.OnEEMailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EStraat", DbType:="NVarChar(50)")>  _
	Public Property EStraat() As String
		Get
			Return Me._EStraat
		End Get
		Set
			If (String.Equals(Me._EStraat, value) = false) Then
				Me.OnEStraatChanging(value)
				Me.SendPropertyChanging
				Me._EStraat = value
				Me.SendPropertyChanged("EStraat")
				Me.OnEStraatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EAdres", DbType:="NVarChar(50)")>  _
	Public Property EAdres() As String
		Get
			Return Me._EAdres
		End Get
		Set
			If (String.Equals(Me._EAdres, value) = false) Then
				Me.OnEAdresChanging(value)
				Me.SendPropertyChanging
				Me._EAdres = value
				Me.SendPropertyChanged("EAdres")
				Me.OnEAdresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ETel", DbType:="NVarChar(20)")>  _
	Public Property ETel() As String
		Get
			Return Me._ETel
		End Get
		Set
			If (String.Equals(Me._ETel, value) = false) Then
				Me.OnETelChanging(value)
				Me.SendPropertyChanging
				Me._ETel = value
				Me.SendPropertyChanged("ETel")
				Me.OnETelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EGSM", DbType:="NVarChar(20)")>  _
	Public Property EGSM() As String
		Get
			Return Me._EGSM
		End Get
		Set
			If (String.Equals(Me._EGSM, value) = false) Then
				Me.OnEGSMChanging(value)
				Me.SendPropertyChanging
				Me._EGSM = value
				Me.SendPropertyChanged("EGSM")
				Me.OnEGSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EFax", DbType:="NVarChar(20)")>  _
	Public Property EFax() As String
		Get
			Return Me._EFax
		End Get
		Set
			If (String.Equals(Me._EFax, value) = false) Then
				Me.OnEFaxChanging(value)
				Me.SendPropertyChanging
				Me._EFax = value
				Me.SendPropertyChanged("EFax")
				Me.OnEFaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EBTWNr", DbType:="NVarChar(30)")>  _
	Public Property EBTWNr() As String
		Get
			Return Me._EBTWNr
		End Get
		Set
			If (String.Equals(Me._EBTWNr, value) = false) Then
				Me.OnEBTWNrChanging(value)
				Me.SendPropertyChanging
				Me._EBTWNr = value
				Me.SendPropertyChanged("EBTWNr")
				Me.OnEBTWNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EREKNR", DbType:="NVarChar(30)")>  _
	Public Property EREKNR() As String
		Get
			Return Me._EREKNR
		End Get
		Set
			If (String.Equals(Me._EREKNR, value) = false) Then
				Me.OnEREKNRChanging(value)
				Me.SendPropertyChanging
				Me._EREKNR = value
				Me.SendPropertyChanged("EREKNR")
				Me.OnEREKNRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10)")>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime")>  _
	Public Property chdate() As System.Nullable(Of Date)
		Get
			Return Me._chdate
		End Get
		Set
			If (Me._chdate.Equals(value) = false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PER")>  _
Partial Public Class PER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PERNRQ As Integer
	
	Private _PERNM As String
	
	Private _PERTEL As String
	
	Private _PERGSM As String
	
	Private _PERGSMW As String
	
	Private _usernrq As String
	
	Private _chdate As Date
	
	Private _tel As Integer
	
	Private _PERSORT As String
	
	Private _DIENST As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPERNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnPERNRQChanged()
    End Sub
    Partial Private Sub OnPERNMChanging(value As String)
    End Sub
    Partial Private Sub OnPERNMChanged()
    End Sub
    Partial Private Sub OnPERTELChanging(value As String)
    End Sub
    Partial Private Sub OnPERTELChanged()
    End Sub
    Partial Private Sub OnPERGSMChanging(value As String)
    End Sub
    Partial Private Sub OnPERGSMChanged()
    End Sub
    Partial Private Sub OnPERGSMWChanging(value As String)
    End Sub
    Partial Private Sub OnPERGSMWChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    Partial Private Sub OntelChanging(value As Integer)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnPERSORTChanging(value As String)
    End Sub
    Partial Private Sub OnPERSORTChanged()
    End Sub
    Partial Private Sub OnDIENSTChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDIENSTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERNRQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property PERNRQ() As Integer
		Get
			Return Me._PERNRQ
		End Get
		Set
			If ((Me._PERNRQ = value)  _
						= false) Then
				Me.OnPERNRQChanging(value)
				Me.SendPropertyChanging
				Me._PERNRQ = value
				Me.SendPropertyChanged("PERNRQ")
				Me.OnPERNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERNM", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property PERNM() As String
		Get
			Return Me._PERNM
		End Get
		Set
			If (String.Equals(Me._PERNM, value) = false) Then
				Me.OnPERNMChanging(value)
				Me.SendPropertyChanging
				Me._PERNM = value
				Me.SendPropertyChanged("PERNM")
				Me.OnPERNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERTEL", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property PERTEL() As String
		Get
			Return Me._PERTEL
		End Get
		Set
			If (String.Equals(Me._PERTEL, value) = false) Then
				Me.OnPERTELChanging(value)
				Me.SendPropertyChanging
				Me._PERTEL = value
				Me.SendPropertyChanged("PERTEL")
				Me.OnPERTELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERGSM", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property PERGSM() As String
		Get
			Return Me._PERGSM
		End Get
		Set
			If (String.Equals(Me._PERGSM, value) = false) Then
				Me.OnPERGSMChanging(value)
				Me.SendPropertyChanging
				Me._PERGSM = value
				Me.SendPropertyChanged("PERGSM")
				Me.OnPERGSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERGSMW", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property PERGSMW() As String
		Get
			Return Me._PERGSMW
		End Get
		Set
			If (String.Equals(Me._PERGSMW, value) = false) Then
				Me.OnPERGSMWChanging(value)
				Me.SendPropertyChanging
				Me._PERGSMW = value
				Me.SendPropertyChanged("PERGSMW")
				Me.OnPERGSMWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="Int NOT NULL")>  _
	Public Property tel() As Integer
		Get
			Return Me._tel
		End Get
		Set
			If ((Me._tel = value)  _
						= false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSORT", DbType:="NVarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property PERSORT() As String
		Get
			Return Me._PERSORT
		End Get
		Set
			If (String.Equals(Me._PERSORT, value) = false) Then
				Me.OnPERSORTChanging(value)
				Me.SendPropertyChanging
				Me._PERSORT = value
				Me.SendPropertyChanged("PERSORT")
				Me.OnPERSORTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIENST", DbType:="Bit NOT NULL")>  _
	Public Property DIENST() As Boolean
		Get
			Return Me._DIENST
		End Get
		Set
			If ((Me._DIENST = value)  _
						= false) Then
				Me.OnDIENSTChanging(value)
				Me.SendPropertyChanging
				Me._DIENST = value
				Me.SendPropertyChanged("DIENST")
				Me.OnDIENSTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OAANM")>  _
Partial Public Class OAANM
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _OAANMNRQ As Integer
	
	Private _OAANMNM As String
	
	Private _usernrq As String
	
	Private _chdate As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnOAANMNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnOAANMNRQChanged()
    End Sub
    Partial Private Sub OnOAANMNMChanging(value As String)
    End Sub
    Partial Private Sub OnOAANMNMChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OAANMNRQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property OAANMNRQ() As Integer
		Get
			Return Me._OAANMNRQ
		End Get
		Set
			If ((Me._OAANMNRQ = value)  _
						= false) Then
				Me.OnOAANMNRQChanging(value)
				Me.SendPropertyChanging
				Me._OAANMNRQ = value
				Me.SendPropertyChanged("OAANMNRQ")
				Me.OnOAANMNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OAANMNM", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OAANMNM() As String
		Get
			Return Me._OAANMNM
		End Get
		Set
			If (String.Equals(Me._OAANMNM, value) = false) Then
				Me.OnOAANMNMChanging(value)
				Me.SendPropertyChanging
				Me._OAANMNM = value
				Me.SendPropertyChanged("OAANMNM")
				Me.OnOAANMNMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DIES")>  _
Partial Public Class DIES
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DNRQ As Integer
	
	Private _DIES As Double
	
	Private _OmsDIES As String
	
	Private _usernrq As String
	
	Private _chdate As Date
	
	Private _actief As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnDNRQChanged()
    End Sub
    Partial Private Sub OnDIESChanging(value As Double)
    End Sub
    Partial Private Sub OnDIESChanged()
    End Sub
    Partial Private Sub OnOmsDIESChanging(value As String)
    End Sub
    Partial Private Sub OnOmsDIESChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    Partial Private Sub OnactiefChanging(value As Boolean)
    End Sub
    Partial Private Sub OnactiefChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DNRQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DNRQ() As Integer
		Get
			Return Me._DNRQ
		End Get
		Set
			If ((Me._DNRQ = value)  _
						= false) Then
				Me.OnDNRQChanging(value)
				Me.SendPropertyChanging
				Me._DNRQ = value
				Me.SendPropertyChanged("DNRQ")
				Me.OnDNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIES", DbType:="Float NOT NULL")>  _
	Public Property DIES() As Double
		Get
			Return Me._DIES
		End Get
		Set
			If ((Me._DIES = value)  _
						= false) Then
				Me.OnDIESChanging(value)
				Me.SendPropertyChanging
				Me._DIES = value
				Me.SendPropertyChanged("DIES")
				Me.OnDIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OmsDIES", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OmsDIES() As String
		Get
			Return Me._OmsDIES
		End Get
		Set
			If (String.Equals(Me._OmsDIES, value) = false) Then
				Me.OnOmsDIESChanging(value)
				Me.SendPropertyChanging
				Me._OmsDIES = value
				Me.SendPropertyChanged("OmsDIES")
				Me.OnOmsDIESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_actief", DbType:="Bit NOT NULL")>  _
	Public Property actief() As Boolean
		Get
			Return Me._actief
		End Get
		Set
			If ((Me._actief = value)  _
						= false) Then
				Me.OnactiefChanging(value)
				Me.SendPropertyChanging
				Me._actief = value
				Me.SendPropertyChanged("actief")
				Me.OnactiefChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BON")>  _
Partial Public Class BON
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BONJR As Integer
	
	Private _BONNR As Integer
	
	Private _KNRQ As Integer
	
	Private _ENRQ As Integer
	
	Private _DatumAanvang As Date
	
	Private _OmsBon As String
	
	Private _Particulier As Boolean
	
	Private _Betaald As Boolean
	
	Private _DatumBetaald As System.Nullable(Of Date)
	
	Private _usernrq As String
	
	Private _printed As Boolean
	
	Private _tav As String
	
	Private _fok As Boolean
	
	Private _fnr As Integer
	
	Private _chdate As Date
	
	Private _del As Boolean
	
	Private _tbw As Boolean
	
	Private _gstk As Boolean
	
	Private _vs As Boolean
	
	Private _dvan As Date
	
	Private _dtot As Date
	
	Private _cnr As Integer
	
	Private _cok As Boolean
	
	Private _uv As Boolean
	
	Private _bon_type As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBONJRChanging(value As Integer)
    End Sub
    Partial Private Sub OnBONJRChanged()
    End Sub
    Partial Private Sub OnBONNRChanging(value As Integer)
    End Sub
    Partial Private Sub OnBONNRChanged()
    End Sub
    Partial Private Sub OnKNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnKNRQChanged()
    End Sub
    Partial Private Sub OnENRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnENRQChanged()
    End Sub
    Partial Private Sub OnDatumAanvangChanging(value As Date)
    End Sub
    Partial Private Sub OnDatumAanvangChanged()
    End Sub
    Partial Private Sub OnOmsBonChanging(value As String)
    End Sub
    Partial Private Sub OnOmsBonChanged()
    End Sub
    Partial Private Sub OnParticulierChanging(value As Boolean)
    End Sub
    Partial Private Sub OnParticulierChanged()
    End Sub
    Partial Private Sub OnBetaaldChanging(value As Boolean)
    End Sub
    Partial Private Sub OnBetaaldChanged()
    End Sub
    Partial Private Sub OnDatumBetaaldChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDatumBetaaldChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnprintedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnprintedChanged()
    End Sub
    Partial Private Sub OntavChanging(value As String)
    End Sub
    Partial Private Sub OntavChanged()
    End Sub
    Partial Private Sub OnfokChanging(value As Boolean)
    End Sub
    Partial Private Sub OnfokChanged()
    End Sub
    Partial Private Sub OnfnrChanging(value As Integer)
    End Sub
    Partial Private Sub OnfnrChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    Partial Private Sub OndelChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelChanged()
    End Sub
    Partial Private Sub OntbwChanging(value As Boolean)
    End Sub
    Partial Private Sub OntbwChanged()
    End Sub
    Partial Private Sub OngstkChanging(value As Boolean)
    End Sub
    Partial Private Sub OngstkChanged()
    End Sub
    Partial Private Sub OnvsChanging(value As Boolean)
    End Sub
    Partial Private Sub OnvsChanged()
    End Sub
    Partial Private Sub OndvanChanging(value As Date)
    End Sub
    Partial Private Sub OndvanChanged()
    End Sub
    Partial Private Sub OndtotChanging(value As Date)
    End Sub
    Partial Private Sub OndtotChanged()
    End Sub
    Partial Private Sub OncnrChanging(value As Integer)
    End Sub
    Partial Private Sub OncnrChanged()
    End Sub
    Partial Private Sub OncokChanging(value As Boolean)
    End Sub
    Partial Private Sub OncokChanged()
    End Sub
    Partial Private Sub OnuvChanging(value As Boolean)
    End Sub
    Partial Private Sub OnuvChanged()
    End Sub
    Partial Private Sub Onbon_typeChanging(value As String)
    End Sub
    Partial Private Sub Onbon_typeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BONJR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property BONJR() As Integer
		Get
			Return Me._BONJR
		End Get
		Set
			If ((Me._BONJR = value)  _
						= false) Then
				Me.OnBONJRChanging(value)
				Me.SendPropertyChanging
				Me._BONJR = value
				Me.SendPropertyChanged("BONJR")
				Me.OnBONJRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BONNR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property BONNR() As Integer
		Get
			Return Me._BONNR
		End Get
		Set
			If ((Me._BONNR = value)  _
						= false) Then
				Me.OnBONNRChanging(value)
				Me.SendPropertyChanging
				Me._BONNR = value
				Me.SendPropertyChanged("BONNR")
				Me.OnBONNRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KNRQ", DbType:="Int NOT NULL")>  _
	Public Property KNRQ() As Integer
		Get
			Return Me._KNRQ
		End Get
		Set
			If ((Me._KNRQ = value)  _
						= false) Then
				Me.OnKNRQChanging(value)
				Me.SendPropertyChanging
				Me._KNRQ = value
				Me.SendPropertyChanged("KNRQ")
				Me.OnKNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENRQ", DbType:="Int NOT NULL")>  _
	Public Property ENRQ() As Integer
		Get
			Return Me._ENRQ
		End Get
		Set
			If ((Me._ENRQ = value)  _
						= false) Then
				Me.OnENRQChanging(value)
				Me.SendPropertyChanging
				Me._ENRQ = value
				Me.SendPropertyChanged("ENRQ")
				Me.OnENRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatumAanvang", DbType:="DateTime NOT NULL")>  _
	Public Property DatumAanvang() As Date
		Get
			Return Me._DatumAanvang
		End Get
		Set
			If ((Me._DatumAanvang = value)  _
						= false) Then
				Me.OnDatumAanvangChanging(value)
				Me.SendPropertyChanging
				Me._DatumAanvang = value
				Me.SendPropertyChanged("DatumAanvang")
				Me.OnDatumAanvangChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OmsBon", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property OmsBon() As String
		Get
			Return Me._OmsBon
		End Get
		Set
			If (String.Equals(Me._OmsBon, value) = false) Then
				Me.OnOmsBonChanging(value)
				Me.SendPropertyChanging
				Me._OmsBon = value
				Me.SendPropertyChanged("OmsBon")
				Me.OnOmsBonChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Particulier", DbType:="Bit NOT NULL")>  _
	Public Property Particulier() As Boolean
		Get
			Return Me._Particulier
		End Get
		Set
			If ((Me._Particulier = value)  _
						= false) Then
				Me.OnParticulierChanging(value)
				Me.SendPropertyChanging
				Me._Particulier = value
				Me.SendPropertyChanged("Particulier")
				Me.OnParticulierChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Betaald", DbType:="Bit NOT NULL")>  _
	Public Property Betaald() As Boolean
		Get
			Return Me._Betaald
		End Get
		Set
			If ((Me._Betaald = value)  _
						= false) Then
				Me.OnBetaaldChanging(value)
				Me.SendPropertyChanging
				Me._Betaald = value
				Me.SendPropertyChanged("Betaald")
				Me.OnBetaaldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatumBetaald", DbType:="DateTime")>  _
	Public Property DatumBetaald() As System.Nullable(Of Date)
		Get
			Return Me._DatumBetaald
		End Get
		Set
			If (Me._DatumBetaald.Equals(value) = false) Then
				Me.OnDatumBetaaldChanging(value)
				Me.SendPropertyChanging
				Me._DatumBetaald = value
				Me.SendPropertyChanged("DatumBetaald")
				Me.OnDatumBetaaldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_printed", DbType:="Bit NOT NULL")>  _
	Public Property printed() As Boolean
		Get
			Return Me._printed
		End Get
		Set
			If ((Me._printed = value)  _
						= false) Then
				Me.OnprintedChanging(value)
				Me.SendPropertyChanging
				Me._printed = value
				Me.SendPropertyChanged("printed")
				Me.OnprintedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tav", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property tav() As String
		Get
			Return Me._tav
		End Get
		Set
			If (String.Equals(Me._tav, value) = false) Then
				Me.OntavChanging(value)
				Me.SendPropertyChanging
				Me._tav = value
				Me.SendPropertyChanged("tav")
				Me.OntavChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fok", DbType:="Bit NOT NULL")>  _
	Public Property fok() As Boolean
		Get
			Return Me._fok
		End Get
		Set
			If ((Me._fok = value)  _
						= false) Then
				Me.OnfokChanging(value)
				Me.SendPropertyChanging
				Me._fok = value
				Me.SendPropertyChanged("fok")
				Me.OnfokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fnr", DbType:="Int NOT NULL")>  _
	Public Property fnr() As Integer
		Get
			Return Me._fnr
		End Get
		Set
			If ((Me._fnr = value)  _
						= false) Then
				Me.OnfnrChanging(value)
				Me.SendPropertyChanging
				Me._fnr = value
				Me.SendPropertyChanged("fnr")
				Me.OnfnrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_del", DbType:="Bit NOT NULL")>  _
	Public Property del() As Boolean
		Get
			Return Me._del
		End Get
		Set
			If ((Me._del = value)  _
						= false) Then
				Me.OndelChanging(value)
				Me.SendPropertyChanging
				Me._del = value
				Me.SendPropertyChanged("del")
				Me.OndelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tbw", DbType:="Bit NOT NULL")>  _
	Public Property tbw() As Boolean
		Get
			Return Me._tbw
		End Get
		Set
			If ((Me._tbw = value)  _
						= false) Then
				Me.OntbwChanging(value)
				Me.SendPropertyChanging
				Me._tbw = value
				Me.SendPropertyChanged("tbw")
				Me.OntbwChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gstk", DbType:="Bit NOT NULL")>  _
	Public Property gstk() As Boolean
		Get
			Return Me._gstk
		End Get
		Set
			If ((Me._gstk = value)  _
						= false) Then
				Me.OngstkChanging(value)
				Me.SendPropertyChanging
				Me._gstk = value
				Me.SendPropertyChanged("gstk")
				Me.OngstkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_vs", DbType:="Bit NOT NULL")>  _
	Public Property vs() As Boolean
		Get
			Return Me._vs
		End Get
		Set
			If ((Me._vs = value)  _
						= false) Then
				Me.OnvsChanging(value)
				Me.SendPropertyChanging
				Me._vs = value
				Me.SendPropertyChanged("vs")
				Me.OnvsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvan", DbType:="DateTime NOT NULL")>  _
	Public Property dvan() As Date
		Get
			Return Me._dvan
		End Get
		Set
			If ((Me._dvan = value)  _
						= false) Then
				Me.OndvanChanging(value)
				Me.SendPropertyChanging
				Me._dvan = value
				Me.SendPropertyChanged("dvan")
				Me.OndvanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtot", DbType:="DateTime NOT NULL")>  _
	Public Property dtot() As Date
		Get
			Return Me._dtot
		End Get
		Set
			If ((Me._dtot = value)  _
						= false) Then
				Me.OndtotChanging(value)
				Me.SendPropertyChanging
				Me._dtot = value
				Me.SendPropertyChanged("dtot")
				Me.OndtotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cnr", DbType:="Int NOT NULL")>  _
	Public Property cnr() As Integer
		Get
			Return Me._cnr
		End Get
		Set
			If ((Me._cnr = value)  _
						= false) Then
				Me.OncnrChanging(value)
				Me.SendPropertyChanging
				Me._cnr = value
				Me.SendPropertyChanged("cnr")
				Me.OncnrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cok", DbType:="Bit NOT NULL")>  _
	Public Property cok() As Boolean
		Get
			Return Me._cok
		End Get
		Set
			If ((Me._cok = value)  _
						= false) Then
				Me.OncokChanging(value)
				Me.SendPropertyChanging
				Me._cok = value
				Me.SendPropertyChanged("cok")
				Me.OncokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uv", DbType:="Bit NOT NULL")>  _
	Public Property uv() As Boolean
		Get
			Return Me._uv
		End Get
		Set
			If ((Me._uv = value)  _
						= false) Then
				Me.OnuvChanging(value)
				Me.SendPropertyChanging
				Me._uv = value
				Me.SendPropertyChanged("uv")
				Me.OnuvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bon_type", DbType:="NVarChar(1)")>  _
	Public Property bon_type() As String
		Get
			Return Me._bon_type
		End Get
		Set
			If (String.Equals(Me._bon_type, value) = false) Then
				Me.Onbon_typeChanging(value)
				Me.SendPropertyChanging
				Me._bon_type = value
				Me.SendPropertyChanged("bon_type")
				Me.Onbon_typeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.KLANT")>  _
Partial Public Class KLANT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _KNRQ As Integer
	
	Private _KNaam As String
	
	Private _Ktav As String
	
	Private _KEMail As String
	
	Private _KStraat As String
	
	Private _KAdres As String
	
	Private _KTel As String
	
	Private _KGSM As String
	
	Private _KFax As String
	
	Private _KWStraat As String
	
	Private _KWAdres As String
	
	Private _KBTWNr As String
	
	Private _ConvIN_NR As Double
	
	Private _usernrq As String
	
	Private _USDate As Date
	
	Private _chdate As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnKNRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnKNRQChanged()
    End Sub
    Partial Private Sub OnKNaamChanging(value As String)
    End Sub
    Partial Private Sub OnKNaamChanged()
    End Sub
    Partial Private Sub OnKtavChanging(value As String)
    End Sub
    Partial Private Sub OnKtavChanged()
    End Sub
    Partial Private Sub OnKEMailChanging(value As String)
    End Sub
    Partial Private Sub OnKEMailChanged()
    End Sub
    Partial Private Sub OnKStraatChanging(value As String)
    End Sub
    Partial Private Sub OnKStraatChanged()
    End Sub
    Partial Private Sub OnKAdresChanging(value As String)
    End Sub
    Partial Private Sub OnKAdresChanged()
    End Sub
    Partial Private Sub OnKTelChanging(value As String)
    End Sub
    Partial Private Sub OnKTelChanged()
    End Sub
    Partial Private Sub OnKGSMChanging(value As String)
    End Sub
    Partial Private Sub OnKGSMChanged()
    End Sub
    Partial Private Sub OnKFaxChanging(value As String)
    End Sub
    Partial Private Sub OnKFaxChanged()
    End Sub
    Partial Private Sub OnKWStraatChanging(value As String)
    End Sub
    Partial Private Sub OnKWStraatChanged()
    End Sub
    Partial Private Sub OnKWAdresChanging(value As String)
    End Sub
    Partial Private Sub OnKWAdresChanged()
    End Sub
    Partial Private Sub OnKBTWNrChanging(value As String)
    End Sub
    Partial Private Sub OnKBTWNrChanged()
    End Sub
    Partial Private Sub OnConvIN_NRChanging(value As Double)
    End Sub
    Partial Private Sub OnConvIN_NRChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnUSDateChanging(value As Date)
    End Sub
    Partial Private Sub OnUSDateChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KNRQ", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property KNRQ() As Integer
		Get
			Return Me._KNRQ
		End Get
		Set
			If ((Me._KNRQ = value)  _
						= false) Then
				Me.OnKNRQChanging(value)
				Me.SendPropertyChanging
				Me._KNRQ = value
				Me.SendPropertyChanged("KNRQ")
				Me.OnKNRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KNaam", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property KNaam() As String
		Get
			Return Me._KNaam
		End Get
		Set
			If (String.Equals(Me._KNaam, value) = false) Then
				Me.OnKNaamChanging(value)
				Me.SendPropertyChanging
				Me._KNaam = value
				Me.SendPropertyChanged("KNaam")
				Me.OnKNaamChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ktav", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Ktav() As String
		Get
			Return Me._Ktav
		End Get
		Set
			If (String.Equals(Me._Ktav, value) = false) Then
				Me.OnKtavChanging(value)
				Me.SendPropertyChanging
				Me._Ktav = value
				Me.SendPropertyChanged("Ktav")
				Me.OnKtavChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEMail", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property KEMail() As String
		Get
			Return Me._KEMail
		End Get
		Set
			If (String.Equals(Me._KEMail, value) = false) Then
				Me.OnKEMailChanging(value)
				Me.SendPropertyChanging
				Me._KEMail = value
				Me.SendPropertyChanged("KEMail")
				Me.OnKEMailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KStraat", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property KStraat() As String
		Get
			Return Me._KStraat
		End Get
		Set
			If (String.Equals(Me._KStraat, value) = false) Then
				Me.OnKStraatChanging(value)
				Me.SendPropertyChanging
				Me._KStraat = value
				Me.SendPropertyChanged("KStraat")
				Me.OnKStraatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KAdres", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property KAdres() As String
		Get
			Return Me._KAdres
		End Get
		Set
			If (String.Equals(Me._KAdres, value) = false) Then
				Me.OnKAdresChanging(value)
				Me.SendPropertyChanging
				Me._KAdres = value
				Me.SendPropertyChanged("KAdres")
				Me.OnKAdresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KTel", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property KTel() As String
		Get
			Return Me._KTel
		End Get
		Set
			If (String.Equals(Me._KTel, value) = false) Then
				Me.OnKTelChanging(value)
				Me.SendPropertyChanging
				Me._KTel = value
				Me.SendPropertyChanged("KTel")
				Me.OnKTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KGSM", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property KGSM() As String
		Get
			Return Me._KGSM
		End Get
		Set
			If (String.Equals(Me._KGSM, value) = false) Then
				Me.OnKGSMChanging(value)
				Me.SendPropertyChanging
				Me._KGSM = value
				Me.SendPropertyChanged("KGSM")
				Me.OnKGSMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KFax", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property KFax() As String
		Get
			Return Me._KFax
		End Get
		Set
			If (String.Equals(Me._KFax, value) = false) Then
				Me.OnKFaxChanging(value)
				Me.SendPropertyChanging
				Me._KFax = value
				Me.SendPropertyChanged("KFax")
				Me.OnKFaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KWStraat", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property KWStraat() As String
		Get
			Return Me._KWStraat
		End Get
		Set
			If (String.Equals(Me._KWStraat, value) = false) Then
				Me.OnKWStraatChanging(value)
				Me.SendPropertyChanging
				Me._KWStraat = value
				Me.SendPropertyChanged("KWStraat")
				Me.OnKWStraatChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KWAdres", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property KWAdres() As String
		Get
			Return Me._KWAdres
		End Get
		Set
			If (String.Equals(Me._KWAdres, value) = false) Then
				Me.OnKWAdresChanging(value)
				Me.SendPropertyChanging
				Me._KWAdres = value
				Me.SendPropertyChanged("KWAdres")
				Me.OnKWAdresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KBTWNr", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property KBTWNr() As String
		Get
			Return Me._KBTWNr
		End Get
		Set
			If (String.Equals(Me._KBTWNr, value) = false) Then
				Me.OnKBTWNrChanging(value)
				Me.SendPropertyChanging
				Me._KBTWNr = value
				Me.SendPropertyChanged("KBTWNr")
				Me.OnKBTWNrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConvIN_NR", DbType:="Float NOT NULL")>  _
	Public Property ConvIN_NR() As Double
		Get
			Return Me._ConvIN_NR
		End Get
		Set
			If ((Me._ConvIN_NR = value)  _
						= false) Then
				Me.OnConvIN_NRChanging(value)
				Me.SendPropertyChanging
				Me._ConvIN_NR = value
				Me.SendPropertyChanged("ConvIN_NR")
				Me.OnConvIN_NRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USDate", DbType:="DateTime NOT NULL")>  _
	Public Property USDate() As Date
		Get
			Return Me._USDate
		End Get
		Set
			If ((Me._USDate = value)  _
						= false) Then
				Me.OnUSDateChanging(value)
				Me.SendPropertyChanging
				Me._USDate = value
				Me.SendPropertyChanged("USDate")
				Me.OnUSDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.STOCK")>  _
Partial Public Class STOCK
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _STID As Integer
	
	Private _stcgnrq As Integer
	
	Private _stcnrq As Integer
	
	Private _stcode As String
	
	Private _stomscode As String
	
	Private _stomsgroep As String
	
	Private _strans As String
	
	Private _saantal As Double
	
	Private _soms As String
	
	Private _sdat As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSTIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnSTIDChanged()
    End Sub
    Partial Private Sub OnstcgnrqChanging(value As Integer)
    End Sub
    Partial Private Sub OnstcgnrqChanged()
    End Sub
    Partial Private Sub OnstcnrqChanging(value As Integer)
    End Sub
    Partial Private Sub OnstcnrqChanged()
    End Sub
    Partial Private Sub OnstcodeChanging(value As String)
    End Sub
    Partial Private Sub OnstcodeChanged()
    End Sub
    Partial Private Sub OnstomscodeChanging(value As String)
    End Sub
    Partial Private Sub OnstomscodeChanged()
    End Sub
    Partial Private Sub OnstomsgroepChanging(value As String)
    End Sub
    Partial Private Sub OnstomsgroepChanged()
    End Sub
    Partial Private Sub OnstransChanging(value As String)
    End Sub
    Partial Private Sub OnstransChanged()
    End Sub
    Partial Private Sub OnsaantalChanging(value As Double)
    End Sub
    Partial Private Sub OnsaantalChanged()
    End Sub
    Partial Private Sub OnsomsChanging(value As String)
    End Sub
    Partial Private Sub OnsomsChanged()
    End Sub
    Partial Private Sub OnsdatChanging(value As Date)
    End Sub
    Partial Private Sub OnsdatChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property STID() As Integer
		Get
			Return Me._STID
		End Get
		Set
			If ((Me._STID = value)  _
						= false) Then
				Me.OnSTIDChanging(value)
				Me.SendPropertyChanging
				Me._STID = value
				Me.SendPropertyChanged("STID")
				Me.OnSTIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stcgnrq", DbType:="Int NOT NULL")>  _
	Public Property stcgnrq() As Integer
		Get
			Return Me._stcgnrq
		End Get
		Set
			If ((Me._stcgnrq = value)  _
						= false) Then
				Me.OnstcgnrqChanging(value)
				Me.SendPropertyChanging
				Me._stcgnrq = value
				Me.SendPropertyChanged("stcgnrq")
				Me.OnstcgnrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stcnrq", DbType:="Int NOT NULL")>  _
	Public Property stcnrq() As Integer
		Get
			Return Me._stcnrq
		End Get
		Set
			If ((Me._stcnrq = value)  _
						= false) Then
				Me.OnstcnrqChanging(value)
				Me.SendPropertyChanging
				Me._stcnrq = value
				Me.SendPropertyChanged("stcnrq")
				Me.OnstcnrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stcode", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property stcode() As String
		Get
			Return Me._stcode
		End Get
		Set
			If (String.Equals(Me._stcode, value) = false) Then
				Me.OnstcodeChanging(value)
				Me.SendPropertyChanging
				Me._stcode = value
				Me.SendPropertyChanged("stcode")
				Me.OnstcodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stomscode", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property stomscode() As String
		Get
			Return Me._stomscode
		End Get
		Set
			If (String.Equals(Me._stomscode, value) = false) Then
				Me.OnstomscodeChanging(value)
				Me.SendPropertyChanging
				Me._stomscode = value
				Me.SendPropertyChanged("stomscode")
				Me.OnstomscodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stomsgroep", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property stomsgroep() As String
		Get
			Return Me._stomsgroep
		End Get
		Set
			If (String.Equals(Me._stomsgroep, value) = false) Then
				Me.OnstomsgroepChanging(value)
				Me.SendPropertyChanging
				Me._stomsgroep = value
				Me.SendPropertyChanged("stomsgroep")
				Me.OnstomsgroepChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_strans", DbType:="NVarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property strans() As String
		Get
			Return Me._strans
		End Get
		Set
			If (String.Equals(Me._strans, value) = false) Then
				Me.OnstransChanging(value)
				Me.SendPropertyChanging
				Me._strans = value
				Me.SendPropertyChanged("strans")
				Me.OnstransChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_saantal", DbType:="Float NOT NULL")>  _
	Public Property saantal() As Double
		Get
			Return Me._saantal
		End Get
		Set
			If ((Me._saantal = value)  _
						= false) Then
				Me.OnsaantalChanging(value)
				Me.SendPropertyChanging
				Me._saantal = value
				Me.SendPropertyChanged("saantal")
				Me.OnsaantalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_soms", DbType:="NVarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property soms() As String
		Get
			Return Me._soms
		End Get
		Set
			If (String.Equals(Me._soms, value) = false) Then
				Me.OnsomsChanging(value)
				Me.SendPropertyChanging
				Me._soms = value
				Me.SendPropertyChanged("soms")
				Me.OnsomsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sdat", DbType:="DateTime NOT NULL")>  _
	Public Property sdat() As Date
		Get
			Return Me._sdat
		End Get
		Set
			If ((Me._sdat = value)  _
						= false) Then
				Me.OnsdatChanging(value)
				Me.SendPropertyChanging
				Me._sdat = value
				Me.SendPropertyChanged("sdat")
				Me.OnsdatChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LEV")>  _
Partial Public Class LEV
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _LEVnrq As Integer
	
	Private _LEVnaam As String
	
	Private _usernrq As String
	
	Private _chdate As Date
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLEVnrqChanging(value As Integer)
    End Sub
    Partial Private Sub OnLEVnrqChanged()
    End Sub
    Partial Private Sub OnLEVnaamChanging(value As String)
    End Sub
    Partial Private Sub OnLEVnaamChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVnrq", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property LEVnrq() As Integer
		Get
			Return Me._LEVnrq
		End Get
		Set
			If ((Me._LEVnrq = value)  _
						= false) Then
				Me.OnLEVnrqChanging(value)
				Me.SendPropertyChanging
				Me._LEVnrq = value
				Me.SendPropertyChanged("LEVnrq")
				Me.OnLEVnrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LEVnaam", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property LEVnaam() As String
		Get
			Return Me._LEVnaam
		End Get
		Set
			If (String.Equals(Me._LEVnaam, value) = false) Then
				Me.OnLEVnaamChanging(value)
				Me.SendPropertyChanging
				Me._LEVnaam = value
				Me.SendPropertyChanged("LEVnaam")
				Me.OnLEVnaamChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FAKT")>  _
Partial Public Class FAKT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _JAAR As Integer
	
	Private _NR As Integer
	
	Private _DC As String
	
	Private _FNR As Integer
	
	Private _KNaam As String
	
	Private _Datin As Date
	
	Private _Werf As String
	
	Private _usernrq As String
	
	Private _chdate As Date
	
	Private _tbedrag As Double
	
	Private _ENRQ As Integer
	
	Private _KSTRAAT As String
	
	Private _KADRES As String
	
	Private _WJAAR As Integer
	
	Private _dvan As Date
	
	Private _dtot As Date
	
	Private _teenhp As Double
	
	Private _tbtw As Double
	
	Private _bon_type As System.Nullable(Of Char)
	
	Private _fakt_ncalc As System.Nullable(Of Double)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnJAARChanging(value As Integer)
    End Sub
    Partial Private Sub OnJAARChanged()
    End Sub
    Partial Private Sub OnNRChanging(value As Integer)
    End Sub
    Partial Private Sub OnNRChanged()
    End Sub
    Partial Private Sub OnDCChanging(value As String)
    End Sub
    Partial Private Sub OnDCChanged()
    End Sub
    Partial Private Sub OnFNRChanging(value As Integer)
    End Sub
    Partial Private Sub OnFNRChanged()
    End Sub
    Partial Private Sub OnKNaamChanging(value As String)
    End Sub
    Partial Private Sub OnKNaamChanged()
    End Sub
    Partial Private Sub OnDatinChanging(value As Date)
    End Sub
    Partial Private Sub OnDatinChanged()
    End Sub
    Partial Private Sub OnWerfChanging(value As String)
    End Sub
    Partial Private Sub OnWerfChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    Partial Private Sub OntbedragChanging(value As Double)
    End Sub
    Partial Private Sub OntbedragChanged()
    End Sub
    Partial Private Sub OnENRQChanging(value As Integer)
    End Sub
    Partial Private Sub OnENRQChanged()
    End Sub
    Partial Private Sub OnKSTRAATChanging(value As String)
    End Sub
    Partial Private Sub OnKSTRAATChanged()
    End Sub
    Partial Private Sub OnKADRESChanging(value As String)
    End Sub
    Partial Private Sub OnKADRESChanged()
    End Sub
    Partial Private Sub OnWJAARChanging(value As Integer)
    End Sub
    Partial Private Sub OnWJAARChanged()
    End Sub
    Partial Private Sub OndvanChanging(value As Date)
    End Sub
    Partial Private Sub OndvanChanged()
    End Sub
    Partial Private Sub OndtotChanging(value As Date)
    End Sub
    Partial Private Sub OndtotChanged()
    End Sub
    Partial Private Sub OnteenhpChanging(value As Double)
    End Sub
    Partial Private Sub OnteenhpChanged()
    End Sub
    Partial Private Sub OntbtwChanging(value As Double)
    End Sub
    Partial Private Sub OntbtwChanged()
    End Sub
    Partial Private Sub Onbon_typeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onbon_typeChanged()
    End Sub
    Partial Private Sub Onfakt_ncalcChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onfakt_ncalcChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JAAR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property JAAR() As Integer
		Get
			Return Me._JAAR
		End Get
		Set
			If ((Me._JAAR = value)  _
						= false) Then
				Me.OnJAARChanging(value)
				Me.SendPropertyChanging
				Me._JAAR = value
				Me.SendPropertyChanged("JAAR")
				Me.OnJAARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property NR() As Integer
		Get
			Return Me._NR
		End Get
		Set
			If ((Me._NR = value)  _
						= false) Then
				Me.OnNRChanging(value)
				Me.SendPropertyChanging
				Me._NR = value
				Me.SendPropertyChanged("NR")
				Me.OnNRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DC", DbType:="NVarChar(1) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property DC() As String
		Get
			Return Me._DC
		End Get
		Set
			If (String.Equals(Me._DC, value) = false) Then
				Me.OnDCChanging(value)
				Me.SendPropertyChanging
				Me._DC = value
				Me.SendPropertyChanged("DC")
				Me.OnDCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FNR", DbType:="Int NOT NULL")>  _
	Public Property FNR() As Integer
		Get
			Return Me._FNR
		End Get
		Set
			If ((Me._FNR = value)  _
						= false) Then
				Me.OnFNRChanging(value)
				Me.SendPropertyChanging
				Me._FNR = value
				Me.SendPropertyChanged("FNR")
				Me.OnFNRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KNaam", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property KNaam() As String
		Get
			Return Me._KNaam
		End Get
		Set
			If (String.Equals(Me._KNaam, value) = false) Then
				Me.OnKNaamChanging(value)
				Me.SendPropertyChanging
				Me._KNaam = value
				Me.SendPropertyChanged("KNaam")
				Me.OnKNaamChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Datin", DbType:="DateTime NOT NULL")>  _
	Public Property Datin() As Date
		Get
			Return Me._Datin
		End Get
		Set
			If ((Me._Datin = value)  _
						= false) Then
				Me.OnDatinChanging(value)
				Me.SendPropertyChanging
				Me._Datin = value
				Me.SendPropertyChanged("Datin")
				Me.OnDatinChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Werf", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property Werf() As String
		Get
			Return Me._Werf
		End Get
		Set
			If (String.Equals(Me._Werf, value) = false) Then
				Me.OnWerfChanging(value)
				Me.SendPropertyChanging
				Me._Werf = value
				Me.SendPropertyChanged("Werf")
				Me.OnWerfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tbedrag", DbType:="Float NOT NULL")>  _
	Public Property tbedrag() As Double
		Get
			Return Me._tbedrag
		End Get
		Set
			If ((Me._tbedrag = value)  _
						= false) Then
				Me.OntbedragChanging(value)
				Me.SendPropertyChanging
				Me._tbedrag = value
				Me.SendPropertyChanged("tbedrag")
				Me.OntbedragChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ENRQ", DbType:="Int NOT NULL")>  _
	Public Property ENRQ() As Integer
		Get
			Return Me._ENRQ
		End Get
		Set
			If ((Me._ENRQ = value)  _
						= false) Then
				Me.OnENRQChanging(value)
				Me.SendPropertyChanging
				Me._ENRQ = value
				Me.SendPropertyChanged("ENRQ")
				Me.OnENRQChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KSTRAAT", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property KSTRAAT() As String
		Get
			Return Me._KSTRAAT
		End Get
		Set
			If (String.Equals(Me._KSTRAAT, value) = false) Then
				Me.OnKSTRAATChanging(value)
				Me.SendPropertyChanging
				Me._KSTRAAT = value
				Me.SendPropertyChanged("KSTRAAT")
				Me.OnKSTRAATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KADRES", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property KADRES() As String
		Get
			Return Me._KADRES
		End Get
		Set
			If (String.Equals(Me._KADRES, value) = false) Then
				Me.OnKADRESChanging(value)
				Me.SendPropertyChanging
				Me._KADRES = value
				Me.SendPropertyChanged("KADRES")
				Me.OnKADRESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WJAAR", DbType:="Int NOT NULL")>  _
	Public Property WJAAR() As Integer
		Get
			Return Me._WJAAR
		End Get
		Set
			If ((Me._WJAAR = value)  _
						= false) Then
				Me.OnWJAARChanging(value)
				Me.SendPropertyChanging
				Me._WJAAR = value
				Me.SendPropertyChanged("WJAAR")
				Me.OnWJAARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dvan", DbType:="DateTime NOT NULL")>  _
	Public Property dvan() As Date
		Get
			Return Me._dvan
		End Get
		Set
			If ((Me._dvan = value)  _
						= false) Then
				Me.OndvanChanging(value)
				Me.SendPropertyChanging
				Me._dvan = value
				Me.SendPropertyChanged("dvan")
				Me.OndvanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dtot", DbType:="DateTime NOT NULL")>  _
	Public Property dtot() As Date
		Get
			Return Me._dtot
		End Get
		Set
			If ((Me._dtot = value)  _
						= false) Then
				Me.OndtotChanging(value)
				Me.SendPropertyChanging
				Me._dtot = value
				Me.SendPropertyChanged("dtot")
				Me.OndtotChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_teenhp", DbType:="Float NOT NULL")>  _
	Public Property teenhp() As Double
		Get
			Return Me._teenhp
		End Get
		Set
			If ((Me._teenhp = value)  _
						= false) Then
				Me.OnteenhpChanging(value)
				Me.SendPropertyChanging
				Me._teenhp = value
				Me.SendPropertyChanged("teenhp")
				Me.OnteenhpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tbtw", DbType:="Float NOT NULL")>  _
	Public Property tbtw() As Double
		Get
			Return Me._tbtw
		End Get
		Set
			If ((Me._tbtw = value)  _
						= false) Then
				Me.OntbtwChanging(value)
				Me.SendPropertyChanging
				Me._tbtw = value
				Me.SendPropertyChanged("tbtw")
				Me.OntbtwChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bon_type", DbType:="NChar(1)")>  _
	Public Property bon_type() As System.Nullable(Of Char)
		Get
			Return Me._bon_type
		End Get
		Set
			If (Me._bon_type.Equals(value) = false) Then
				Me.Onbon_typeChanging(value)
				Me.SendPropertyChanging
				Me._bon_type = value
				Me.SendPropertyChanged("bon_type")
				Me.Onbon_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fakt_ncalc", DbType:="Float")>  _
	Public Property fakt_ncalc() As System.Nullable(Of Double)
		Get
			Return Me._fakt_ncalc
		End Get
		Set
			If (Me._fakt_ncalc.Equals(value) = false) Then
				Me.Onfakt_ncalcChanging(value)
				Me.SendPropertyChanging
				Me._fakt_ncalc = value
				Me.SendPropertyChanged("fakt_ncalc")
				Me.Onfakt_ncalcChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FAKTL")>  _
Partial Public Class FAKTL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FJAAR As Integer
	
	Private _FNR As Integer
	
	Private _DC As String
	
	Private _FAKTL As Integer
	
	Private _DATUM As Date
	
	Private _BWSTRAAT As String
	
	Private _BWADRES As String
	
	Private _AANTAL As Single
	
	Private _EENHP As Double
	
	Private _BTW As Integer
	
	Private _AOMS As String
	
	Private _CODE As String
	
	Private _OMSCODE As String
	
	Private _GROEP As String
	
	Private _diesel As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFJAARChanging(value As Integer)
    End Sub
    Partial Private Sub OnFJAARChanged()
    End Sub
    Partial Private Sub OnFNRChanging(value As Integer)
    End Sub
    Partial Private Sub OnFNRChanged()
    End Sub
    Partial Private Sub OnDCChanging(value As String)
    End Sub
    Partial Private Sub OnDCChanged()
    End Sub
    Partial Private Sub OnFAKTLChanging(value As Integer)
    End Sub
    Partial Private Sub OnFAKTLChanged()
    End Sub
    Partial Private Sub OnDATUMChanging(value As Date)
    End Sub
    Partial Private Sub OnDATUMChanged()
    End Sub
    Partial Private Sub OnBWSTRAATChanging(value As String)
    End Sub
    Partial Private Sub OnBWSTRAATChanged()
    End Sub
    Partial Private Sub OnBWADRESChanging(value As String)
    End Sub
    Partial Private Sub OnBWADRESChanged()
    End Sub
    Partial Private Sub OnAANTALChanging(value As Single)
    End Sub
    Partial Private Sub OnAANTALChanged()
    End Sub
    Partial Private Sub OnEENHPChanging(value As Double)
    End Sub
    Partial Private Sub OnEENHPChanged()
    End Sub
    Partial Private Sub OnBTWChanging(value As Integer)
    End Sub
    Partial Private Sub OnBTWChanged()
    End Sub
    Partial Private Sub OnAOMSChanging(value As String)
    End Sub
    Partial Private Sub OnAOMSChanged()
    End Sub
    Partial Private Sub OnCODEChanging(value As String)
    End Sub
    Partial Private Sub OnCODEChanged()
    End Sub
    Partial Private Sub OnOMSCODEChanging(value As String)
    End Sub
    Partial Private Sub OnOMSCODEChanged()
    End Sub
    Partial Private Sub OnGROEPChanging(value As String)
    End Sub
    Partial Private Sub OnGROEPChanged()
    End Sub
    Partial Private Sub OndieselChanging(value As Integer)
    End Sub
    Partial Private Sub OndieselChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FJAAR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FJAAR() As Integer
		Get
			Return Me._FJAAR
		End Get
		Set
			If ((Me._FJAAR = value)  _
						= false) Then
				Me.OnFJAARChanging(value)
				Me.SendPropertyChanging
				Me._FJAAR = value
				Me.SendPropertyChanged("FJAAR")
				Me.OnFJAARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FNR", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FNR() As Integer
		Get
			Return Me._FNR
		End Get
		Set
			If ((Me._FNR = value)  _
						= false) Then
				Me.OnFNRChanging(value)
				Me.SendPropertyChanging
				Me._FNR = value
				Me.SendPropertyChanged("FNR")
				Me.OnFNRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DC", DbType:="NVarChar(1) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property DC() As String
		Get
			Return Me._DC
		End Get
		Set
			If (String.Equals(Me._DC, value) = false) Then
				Me.OnDCChanging(value)
				Me.SendPropertyChanging
				Me._DC = value
				Me.SendPropertyChanged("DC")
				Me.OnDCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAKTL", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FAKTL() As Integer
		Get
			Return Me._FAKTL
		End Get
		Set
			If ((Me._FAKTL = value)  _
						= false) Then
				Me.OnFAKTLChanging(value)
				Me.SendPropertyChanging
				Me._FAKTL = value
				Me.SendPropertyChanged("FAKTL")
				Me.OnFAKTLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DATUM", DbType:="DateTime NOT NULL")>  _
	Public Property DATUM() As Date
		Get
			Return Me._DATUM
		End Get
		Set
			If ((Me._DATUM = value)  _
						= false) Then
				Me.OnDATUMChanging(value)
				Me.SendPropertyChanging
				Me._DATUM = value
				Me.SendPropertyChanged("DATUM")
				Me.OnDATUMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BWSTRAAT", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property BWSTRAAT() As String
		Get
			Return Me._BWSTRAAT
		End Get
		Set
			If (String.Equals(Me._BWSTRAAT, value) = false) Then
				Me.OnBWSTRAATChanging(value)
				Me.SendPropertyChanging
				Me._BWSTRAAT = value
				Me.SendPropertyChanged("BWSTRAAT")
				Me.OnBWSTRAATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BWADRES", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property BWADRES() As String
		Get
			Return Me._BWADRES
		End Get
		Set
			If (String.Equals(Me._BWADRES, value) = false) Then
				Me.OnBWADRESChanging(value)
				Me.SendPropertyChanging
				Me._BWADRES = value
				Me.SendPropertyChanged("BWADRES")
				Me.OnBWADRESChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AANTAL", DbType:="Real NOT NULL")>  _
	Public Property AANTAL() As Single
		Get
			Return Me._AANTAL
		End Get
		Set
			If ((Me._AANTAL = value)  _
						= false) Then
				Me.OnAANTALChanging(value)
				Me.SendPropertyChanging
				Me._AANTAL = value
				Me.SendPropertyChanged("AANTAL")
				Me.OnAANTALChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EENHP", DbType:="Float NOT NULL")>  _
	Public Property EENHP() As Double
		Get
			Return Me._EENHP
		End Get
		Set
			If ((Me._EENHP = value)  _
						= false) Then
				Me.OnEENHPChanging(value)
				Me.SendPropertyChanging
				Me._EENHP = value
				Me.SendPropertyChanged("EENHP")
				Me.OnEENHPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BTW", DbType:="Int NOT NULL")>  _
	Public Property BTW() As Integer
		Get
			Return Me._BTW
		End Get
		Set
			If ((Me._BTW = value)  _
						= false) Then
				Me.OnBTWChanging(value)
				Me.SendPropertyChanging
				Me._BTW = value
				Me.SendPropertyChanged("BTW")
				Me.OnBTWChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOMS", DbType:="NVarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property AOMS() As String
		Get
			Return Me._AOMS
		End Get
		Set
			If (String.Equals(Me._AOMS, value) = false) Then
				Me.OnAOMSChanging(value)
				Me.SendPropertyChanging
				Me._AOMS = value
				Me.SendPropertyChanged("AOMS")
				Me.OnAOMSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CODE", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property CODE() As String
		Get
			Return Me._CODE
		End Get
		Set
			If (String.Equals(Me._CODE, value) = false) Then
				Me.OnCODEChanging(value)
				Me.SendPropertyChanging
				Me._CODE = value
				Me.SendPropertyChanged("CODE")
				Me.OnCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OMSCODE", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property OMSCODE() As String
		Get
			Return Me._OMSCODE
		End Get
		Set
			If (String.Equals(Me._OMSCODE, value) = false) Then
				Me.OnOMSCODEChanging(value)
				Me.SendPropertyChanging
				Me._OMSCODE = value
				Me.SendPropertyChanged("OMSCODE")
				Me.OnOMSCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROEP", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property GROEP() As String
		Get
			Return Me._GROEP
		End Get
		Set
			If (String.Equals(Me._GROEP, value) = false) Then
				Me.OnGROEPChanging(value)
				Me.SendPropertyChanging
				Me._GROEP = value
				Me.SendPropertyChanged("GROEP")
				Me.OnGROEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diesel", DbType:="Int NOT NULL")>  _
	Public Property diesel() As Integer
		Get
			Return Me._diesel
		End Get
		Set
			If ((Me._diesel = value)  _
						= false) Then
				Me.OndieselChanging(value)
				Me.SendPropertyChanging
				Me._diesel = value
				Me.SendPropertyChanged("diesel")
				Me.OndieselChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.DEL")>  _
Partial Public Class DEL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _usernrq As String
	
	Private _delWO As String
	
	Private _chdate As Date
	
	Private _part As String
	
	Private _delinfo As String
	
	Private _yearin As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnusernrqChanging(value As String)
    End Sub
    Partial Private Sub OnusernrqChanged()
    End Sub
    Partial Private Sub OndelWOChanging(value As String)
    End Sub
    Partial Private Sub OndelWOChanged()
    End Sub
    Partial Private Sub OnchdateChanging(value As Date)
    End Sub
    Partial Private Sub OnchdateChanged()
    End Sub
    Partial Private Sub OnpartChanging(value As String)
    End Sub
    Partial Private Sub OnpartChanged()
    End Sub
    Partial Private Sub OndelinfoChanging(value As String)
    End Sub
    Partial Private Sub OndelinfoChanged()
    End Sub
    Partial Private Sub OnyearinChanging(value As String)
    End Sub
    Partial Private Sub OnyearinChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_usernrq", DbType:="NVarChar(10)")>  _
	Public Property usernrq() As String
		Get
			Return Me._usernrq
		End Get
		Set
			If (String.Equals(Me._usernrq, value) = false) Then
				Me.OnusernrqChanging(value)
				Me.SendPropertyChanging
				Me._usernrq = value
				Me.SendPropertyChanged("usernrq")
				Me.OnusernrqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delWO", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property delWO() As String
		Get
			Return Me._delWO
		End Get
		Set
			If (String.Equals(Me._delWO, value) = false) Then
				Me.OndelWOChanging(value)
				Me.SendPropertyChanging
				Me._delWO = value
				Me.SendPropertyChanged("delWO")
				Me.OndelWOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chdate", DbType:="DateTime NOT NULL")>  _
	Public Property chdate() As Date
		Get
			Return Me._chdate
		End Get
		Set
			If ((Me._chdate = value)  _
						= false) Then
				Me.OnchdateChanging(value)
				Me.SendPropertyChanging
				Me._chdate = value
				Me.SendPropertyChanged("chdate")
				Me.OnchdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_part", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property part() As String
		Get
			Return Me._part
		End Get
		Set
			If (String.Equals(Me._part, value) = false) Then
				Me.OnpartChanging(value)
				Me.SendPropertyChanging
				Me._part = value
				Me.SendPropertyChanged("part")
				Me.OnpartChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delinfo", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property delinfo() As String
		Get
			Return Me._delinfo
		End Get
		Set
			If (String.Equals(Me._delinfo, value) = false) Then
				Me.OndelinfoChanging(value)
				Me.SendPropertyChanging
				Me._delinfo = value
				Me.SendPropertyChanged("delinfo")
				Me.OndelinfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yearin", DbType:="NVarChar(4)")>  _
	Public Property yearin() As String
		Get
			Return Me._yearin
		End Get
		Set
			If (String.Equals(Me._yearin, value) = false) Then
				Me.OnyearinChanging(value)
				Me.SendPropertyChanging
				Me._yearin = value
				Me.SendPropertyChanged("yearin")
				Me.OnyearinChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
